/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI_Info;

import Appointment_Info.Encounter;
import Appointment_Info.VitalSigns;
import Location_Info.City;
import Location_Info.Community;
import Location_Info.Hospital;
import Location_Info.House;
import Person_Info.Doctor;
import Person_Info.Patient;
import javax.swing.JOptionPane;
import System_Info.SystemData;
import Person_Info.Person;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NRNirmala
 */
public class LoginJFrame extends javax.swing.JFrame {

    SystemData system = new SystemData();
    String globalRole;
    
    /**
     * Creates new form LoginJFrame
     */
    public LoginJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LoginJPanel = new javax.swing.JPanel();
        lblLoginPage = new javax.swing.JLabel();
        lblUserName = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        pwdLoginPassword = new javax.swing.JPasswordField();
        btnLogin = new javax.swing.JButton();
        NewUserJPanel = new javax.swing.JPanel();
        lblLastName = new javax.swing.JLabel();
        lblFirstName = new javax.swing.JLabel();
        lblHouse = new javax.swing.JLabel();
        lblAddressDetails = new javax.swing.JLabel();
        lblCommunity = new javax.swing.JLabel();
        txtZipCode = new javax.swing.JTextField();
        lblPatientName = new javax.swing.JLabel();
        lblPhoneNo = new javax.swing.JLabel();
        txtEmailId = new javax.swing.JTextField();
        lblEmailId = new javax.swing.JLabel();
        lblPatientContact = new javax.swing.JLabel();
        txtPhoneNo = new javax.swing.JTextField();
        lblNewUser = new javax.swing.JLabel();
        lblPatientDetails = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        lblGender = new javax.swing.JLabel();
        lblNewUserName = new javax.swing.JLabel();
        cbGender = new javax.swing.JComboBox<>();
        lblZipCode = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblNewPassword = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        txtNewUserName = new javax.swing.JTextField();
        txtNewPassword = new javax.swing.JPasswordField();
        lblLoginDetails = new javax.swing.JLabel();
        btnNewUserSubmit = new javax.swing.JButton();
        lblRole = new javax.swing.JLabel();
        cbRole = new javax.swing.JComboBox<>();
        lblCity2 = new javax.swing.JLabel();
        NewDoctorSubPanel = new javax.swing.JPanel();
        cbNewUserSpecialization = new javax.swing.JComboBox<>();
        lblDoctorDetails = new javax.swing.JLabel();
        lblNewUserSpecialization = new javax.swing.JLabel();
        lblNewUserHospital = new javax.swing.JLabel();
        cbNewUserHospital = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        lblNewDoctorCity = new javax.swing.JLabel();
        cbNewDoctorCity = new javax.swing.JComboBox<>();
        cbNewUserCity = new javax.swing.JComboBox<>();
        cbNewUserCommunity = new javax.swing.JComboBox<>();
        cbNewUserHouse = new javax.swing.JComboBox<>();
        WelcomeJPanel = new javax.swing.JPanel();
        lblWelcome = new javax.swing.JLabel();
        btnAddPatient = new javax.swing.JButton();
        btnViewEditLocation = new javax.swing.JButton();
        btnEditPatient = new javax.swing.JButton();
        btnAddNewLocation = new javax.swing.JButton();
        btnAddNewEncounter = new javax.swing.JButton();
        btnViewEditEncounter = new javax.swing.JButton();
        btnLogOut = new javax.swing.JButton();
        ViewEditUserJPanel = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblViewPersonData = new javax.swing.JTable();
        btnViewPerson = new javax.swing.JButton();
        btnEditPerson = new javax.swing.JButton();
        btnDeletePerson = new javax.swing.JButton();
        lblUpdateLastName = new javax.swing.JLabel();
        lblUpdateFirstName = new javax.swing.JLabel();
        lblUpdateDetails = new javax.swing.JLabel();
        txtFirstNameUpdate = new javax.swing.JTextField();
        txtLastNameUpdate = new javax.swing.JTextField();
        lblUpdatePhoneNo = new javax.swing.JLabel();
        txtEmailIdUpdate = new javax.swing.JTextField();
        lblUpdateEmailId = new javax.swing.JLabel();
        txtPhoneNoUpdate = new javax.swing.JTextField();
        lblUpdateAge = new javax.swing.JLabel();
        txtAgeUpdate = new javax.swing.JTextField();
        cbGenderUpdate = new javax.swing.JComboBox<>();
        lblUpdateGender = new javax.swing.JLabel();
        lblHouseUpdate = new javax.swing.JLabel();
        lblCityUpdate = new javax.swing.JLabel();
        lblCommunityUpdate = new javax.swing.JLabel();
        lblZipCodeUpdate = new javax.swing.JLabel();
        txtHouseUpdate = new javax.swing.JTextField();
        btnUpdatePrsnDet = new javax.swing.JButton();
        lblRoleUpdate = new javax.swing.JLabel();
        cbRoleUpdate = new javax.swing.JComboBox<>();
        UpdateDoctorSubPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        cbUpdateSpecialization = new javax.swing.JComboBox<>();
        lblUpdateSpecialization = new javax.swing.JLabel();
        cbUpdateDoctorCity = new javax.swing.JComboBox<>();
        lblDocUpdateHospital = new javax.swing.JLabel();
        lblUpdateDoctorCity = new javax.swing.JLabel();
        cbDocUpdateHospital = new javax.swing.JComboBox<>();
        btnViewEditBack = new javax.swing.JButton();
        lblUserNameUpdate = new javax.swing.JLabel();
        txtUserNameUpdate = new javax.swing.JTextField();
        lblPasswordUpdate = new javax.swing.JLabel();
        txtPasswordUpdate = new javax.swing.JPasswordField();
        txtZipCodeUpdate = new javax.swing.JTextField();
        cbCityUserUpdate = new javax.swing.JComboBox<>();
        cbCommunityUserUpdate = new javax.swing.JComboBox<>();
        NewLocationJPanel = new javax.swing.JPanel();
        lblAddNewCity = new javax.swing.JLabel();
        lblAddNewCommunity = new javax.swing.JLabel();
        lblAddNewHouse = new javax.swing.JLabel();
        lblNewCity = new javax.swing.JLabel();
        txtNewCity = new javax.swing.JTextField();
        lblNewHouse = new javax.swing.JLabel();
        txtNewHouse = new javax.swing.JTextField();
        lblNewCommunity = new javax.swing.JLabel();
        txtNewCommunity = new javax.swing.JTextField();
        btnSaveNewCommunity = new javax.swing.JButton();
        btnSaveNewHouse = new javax.swing.JButton();
        btnSaveNewCity = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lblAddNewHospital = new javax.swing.JLabel();
        txtNewHospital = new javax.swing.JTextField();
        lblNewHospital = new javax.swing.JLabel();
        btnSaveNewHospital = new javax.swing.JButton();
        btnNewLocationBack = new javax.swing.JButton();
        lblNewHospCity = new javax.swing.JLabel();
        cbNewHospCity = new javax.swing.JComboBox<>();
        lblNewHospCommunity = new javax.swing.JLabel();
        cbNewHospCommunity = new javax.swing.JComboBox<>();
        cbNewHouseCommunity = new javax.swing.JComboBox<>();
        cbNewHouseCity = new javax.swing.JComboBox<>();
        lblNewHouseCity = new javax.swing.JLabel();
        lblNewHouseCommunity = new javax.swing.JLabel();
        ViewEditLocationJPanel = new javax.swing.JPanel();
        jScrollPaneHouse = new javax.swing.JScrollPane();
        tblHouse = new javax.swing.JTable();
        jScrollPaneCity = new javax.swing.JScrollPane();
        tblCity = new javax.swing.JTable();
        jScrollPaneCommunity = new javax.swing.JScrollPane();
        tblCommmunity = new javax.swing.JTable();
        jScrollPaneHospital = new javax.swing.JScrollPane();
        tblHospital = new javax.swing.JTable();
        lblViewEditLocation = new javax.swing.JLabel();
        lblViewEditCommunity = new javax.swing.JLabel();
        lblViewEditHospital = new javax.swing.JLabel();
        lblViewEditCity = new javax.swing.JLabel();
        lblViewEditHouse = new javax.swing.JLabel();
        lblViewEditCityName = new javax.swing.JLabel();
        lblViewEditCommunityName = new javax.swing.JLabel();
        txtViewEditCityName = new javax.swing.JTextField();
        txtViewEditCommunityName = new javax.swing.JTextField();
        btnSubmitCityCommunity = new javax.swing.JButton();
        cbCityHouseHospUpdate = new javax.swing.JComboBox<>();
        cbCommHouseHospUpdate = new javax.swing.JComboBox<>();
        txtViewEditHospitalName = new javax.swing.JTextField();
        txtViewEditHouseName = new javax.swing.JTextField();
        btnUpdateHouseHosp = new javax.swing.JButton();
        btnEditCommunity = new javax.swing.JButton();
        btnEditCity = new javax.swing.JButton();
        btnEditHospital = new javax.swing.JButton();
        btnViewHospital = new javax.swing.JButton();
        btnEditHouse = new javax.swing.JButton();
        btnViewHouse = new javax.swing.JButton();
        btnBackViewEditLoc = new javax.swing.JButton();
        AddNewEncounterPanel = new javax.swing.JPanel();
        lblEncouter = new javax.swing.JLabel();
        lblDocNameEncounter = new javax.swing.JLabel();
        lblCityEncounter = new javax.swing.JLabel();
        lblAppointment = new javax.swing.JLabel();
        txtPatNameEncounter1 = new javax.swing.JLabel();
        lblDocNameEncounter1 = new javax.swing.JLabel();
        cbNewEncounterCity = new javax.swing.JComboBox<>();
        cbNewHospitalEncounter = new javax.swing.JComboBox<>();
        cbNewEncounterCommunity = new javax.swing.JComboBox<>();
        cbNewDoctorEncounter = new javax.swing.JComboBox<>();
        dtNewAppointment = new com.toedter.calendar.JDateChooser();
        btnSubmitNewEncounter = new javax.swing.JButton();
        lblPatientNameEncounter = new javax.swing.JLabel();
        txtNewEncounterPatient = new javax.swing.JTextField();
        btnBackNewEncounter = new javax.swing.JButton();
        EditEncounterPanel = new javax.swing.JPanel();
        lblEncouter1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblEncounter = new javax.swing.JTable();
        txtSearchPatient = new javax.swing.JTextField();
        btnSearchPatient = new javax.swing.JButton();
        btnViewEncounter = new javax.swing.JButton();
        btnEditEncounter = new javax.swing.JButton();
        lblBPedit = new javax.swing.JLabel();
        txtBPedit = new javax.swing.JTextField();
        btnBackEncounter = new javax.swing.JButton();
        lblTempEdit = new javax.swing.JLabel();
        txtTempEdit = new javax.swing.JTextField();
        lblWeight = new javax.swing.JLabel();
        txtHeight = new javax.swing.JTextField();
        txtWeight = new javax.swing.JTextField();
        lblHeight = new javax.swing.JLabel();
        lblComments = new javax.swing.JLabel();
        txtPulseRate = new javax.swing.JTextField();
        lblPulseRate = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtComment = new javax.swing.JTextArea();
        lvlVitals = new javax.swing.JLabel();
        lblDocNameEncounter2 = new javax.swing.JLabel();
        cbNewEncounterCity1 = new javax.swing.JComboBox<>();
        cbNewHospitalEncounter1 = new javax.swing.JComboBox<>();
        cbNewEncounterCommunity1 = new javax.swing.JComboBox<>();
        cbNewDoctorEncounter1 = new javax.swing.JComboBox<>();
        dtNewAppointment1 = new com.toedter.calendar.JDateChooser();
        btnSubmitNewEncounter1 = new javax.swing.JButton();
        lblDocNameEncounter3 = new javax.swing.JLabel();
        lblPatientNameEncounter1 = new javax.swing.JLabel();
        lblCityEncounter1 = new javax.swing.JLabel();
        txtNewEncounterPatient1 = new javax.swing.JTextField();
        lblAppointment1 = new javax.swing.JLabel();
        txtPatNameEncounter2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.CardLayout());

        LoginJPanel.setBackground(new java.awt.Color(255, 255, 255));
        LoginJPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(51, 51, 51)));

        lblLoginPage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLoginPage.setText("LOGIN PAGE");
        lblLoginPage.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102))));
        lblLoginPage.setMaximumSize(new java.awt.Dimension(150, 30));
        lblLoginPage.setMinimumSize(new java.awt.Dimension(150, 30));
        lblLoginPage.setPreferredSize(new java.awt.Dimension(150, 30));

        lblUserName.setText("User Name");
        lblUserName.setMaximumSize(new java.awt.Dimension(150, 30));
        lblUserName.setMinimumSize(new java.awt.Dimension(150, 30));
        lblUserName.setPreferredSize(new java.awt.Dimension(150, 30));

        txtUserName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtUserName.setMaximumSize(new java.awt.Dimension(150, 30));
        txtUserName.setMinimumSize(new java.awt.Dimension(150, 30));
        txtUserName.setPreferredSize(new java.awt.Dimension(150, 30));
        txtUserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserNameActionPerformed(evt);
            }
        });

        lblPassword.setText("Password");
        lblPassword.setMaximumSize(new java.awt.Dimension(150, 30));
        lblPassword.setMinimumSize(new java.awt.Dimension(150, 30));
        lblPassword.setPreferredSize(new java.awt.Dimension(150, 30));

        pwdLoginPassword.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pwdLoginPassword.setMinimumSize(new java.awt.Dimension(150, 30));
        pwdLoginPassword.setPreferredSize(new java.awt.Dimension(150, 30));
        pwdLoginPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwdLoginPasswordActionPerformed(evt);
            }
        });

        btnLogin.setText("Login");
        btnLogin.setBorder(null);
        btnLogin.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLogin.setMaximumSize(new java.awt.Dimension(150, 30));
        btnLogin.setMinimumSize(new java.awt.Dimension(150, 30));
        btnLogin.setPreferredSize(new java.awt.Dimension(150, 30));
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LoginJPanelLayout = new javax.swing.GroupLayout(LoginJPanel);
        LoginJPanel.setLayout(LoginJPanelLayout);
        LoginJPanelLayout.setHorizontalGroup(
            LoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginJPanelLayout.createSequentialGroup()
                .addContainerGap(418, Short.MAX_VALUE)
                .addGroup(LoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblLoginPage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(LoginJPanelLayout.createSequentialGroup()
                        .addGroup(LoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblUserName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblPassword, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(LoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pwdLoginPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE))
                            .addComponent(txtUserName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(380, 380, 380))
        );
        LoginJPanelLayout.setVerticalGroup(
            LoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginJPanelLayout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addComponent(lblLoginPage, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addGroup(LoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(LoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pwdLoginPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(127, 127, 127)
                .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(234, Short.MAX_VALUE))
        );

        getContentPane().add(LoginJPanel, "card2");

        NewUserJPanel.setMaximumSize(new java.awt.Dimension(1300, 700));
        NewUserJPanel.setPreferredSize(new java.awt.Dimension(1300, 700));

        lblLastName.setText("Last Name");

        lblFirstName.setText("First Name");

        lblHouse.setText("House");

        lblAddressDetails.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAddressDetails.setText("Address Details");
        lblAddressDetails.setBorder(new javax.swing.border.MatteBorder(null));

        lblCommunity.setText("Community");

        txtZipCode.setMaximumSize(new java.awt.Dimension(150, 30));
        txtZipCode.setMinimumSize(new java.awt.Dimension(150, 30));
        txtZipCode.setPreferredSize(new java.awt.Dimension(150, 30));
        txtZipCode.setSize(new java.awt.Dimension(150, 30));
        txtZipCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtZipCodeActionPerformed(evt);
            }
        });

        lblPatientName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPatientName.setText("User Name");
        lblPatientName.setBorder(new javax.swing.border.MatteBorder(null));

        lblPhoneNo.setText("Phone Number");

        txtEmailId.setMaximumSize(new java.awt.Dimension(150, 30));
        txtEmailId.setMinimumSize(new java.awt.Dimension(150, 30));
        txtEmailId.setPreferredSize(new java.awt.Dimension(150, 30));
        txtEmailId.setSize(new java.awt.Dimension(150, 30));
        txtEmailId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailIdActionPerformed(evt);
            }
        });

        lblEmailId.setText("Email ID");

        lblPatientContact.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPatientContact.setText("User Contact");
        lblPatientContact.setBorder(new javax.swing.border.MatteBorder(null));

        txtPhoneNo.setMaximumSize(new java.awt.Dimension(150, 30));
        txtPhoneNo.setMinimumSize(new java.awt.Dimension(150, 30));
        txtPhoneNo.setPreferredSize(new java.awt.Dimension(150, 30));
        txtPhoneNo.setSize(new java.awt.Dimension(150, 30));
        txtPhoneNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneNoActionPerformed(evt);
            }
        });

        lblNewUser.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblNewUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNewUser.setText("Add New User");
        lblNewUser.setToolTipText("");
        lblNewUser.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblPatientDetails.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPatientDetails.setText("User Details");
        lblPatientDetails.setBorder(new javax.swing.border.MatteBorder(null));

        lblAge.setText("Age");

        txtAge.setMaximumSize(new java.awt.Dimension(150, 30));
        txtAge.setMinimumSize(new java.awt.Dimension(150, 30));
        txtAge.setPreferredSize(new java.awt.Dimension(150, 30));
        txtAge.setSize(new java.awt.Dimension(150, 30));
        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });

        lblGender.setText("Gender");

        lblNewUserName.setText("User Name");

        cbGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        cbGender.setMaximumSize(new java.awt.Dimension(200, 30));
        cbGender.setMinimumSize(new java.awt.Dimension(200, 30));
        cbGender.setPreferredSize(new java.awt.Dimension(200, 30));
        cbGender.setSize(new java.awt.Dimension(200, 30));

        lblZipCode.setText("Zip Code");

        btnBack.setText("Back");
        btnBack.setMaximumSize(new java.awt.Dimension(200, 30));
        btnBack.setMinimumSize(new java.awt.Dimension(200, 30));
        btnBack.setPreferredSize(new java.awt.Dimension(200, 30));
        btnBack.setSize(new java.awt.Dimension(200, 30));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblNewPassword.setText("Password");

        txtFirstName.setMaximumSize(new java.awt.Dimension(150, 30));
        txtFirstName.setMinimumSize(new java.awt.Dimension(150, 30));
        txtFirstName.setPreferredSize(new java.awt.Dimension(150, 30));
        txtFirstName.setSize(new java.awt.Dimension(150, 30));
        txtFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFirstNameActionPerformed(evt);
            }
        });

        txtLastName.setMaximumSize(new java.awt.Dimension(150, 30));
        txtLastName.setMinimumSize(new java.awt.Dimension(150, 30));
        txtLastName.setPreferredSize(new java.awt.Dimension(150, 30));
        txtLastName.setSize(new java.awt.Dimension(150, 30));
        txtLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLastNameActionPerformed(evt);
            }
        });

        txtNewUserName.setMaximumSize(new java.awt.Dimension(150, 30));
        txtNewUserName.setMinimumSize(new java.awt.Dimension(150, 30));
        txtNewUserName.setPreferredSize(new java.awt.Dimension(150, 30));
        txtNewUserName.setSize(new java.awt.Dimension(150, 30));
        txtNewUserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNewUserNameActionPerformed(evt);
            }
        });

        txtNewPassword.setMaximumSize(new java.awt.Dimension(200, 30));
        txtNewPassword.setMinimumSize(new java.awt.Dimension(200, 30));
        txtNewPassword.setPreferredSize(new java.awt.Dimension(200, 30));
        txtNewPassword.setSize(new java.awt.Dimension(200, 30));

        lblLoginDetails.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLoginDetails.setText("Login Details");
        lblLoginDetails.setBorder(new javax.swing.border.MatteBorder(null));

        btnNewUserSubmit.setText("Submit");
        btnNewUserSubmit.setMaximumSize(new java.awt.Dimension(200, 30));
        btnNewUserSubmit.setMinimumSize(new java.awt.Dimension(200, 30));
        btnNewUserSubmit.setPreferredSize(new java.awt.Dimension(200, 30));
        btnNewUserSubmit.setSize(new java.awt.Dimension(200, 30));
        btnNewUserSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewUserSubmitActionPerformed(evt);
            }
        });

        lblRole.setText("Role");

        cbRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SysAdmin", "HospAdmin", "CommAdmin", "Patient", "Doctor" }));
        cbRole.setMaximumSize(new java.awt.Dimension(200, 30));
        cbRole.setMinimumSize(new java.awt.Dimension(200, 30));
        cbRole.setPreferredSize(new java.awt.Dimension(200, 30));
        cbRole.setSize(new java.awt.Dimension(200, 30));
        cbRole.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbRoleItemStateChanged(evt);
            }
        });

        lblCity2.setText("City");

        NewDoctorSubPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        cbNewUserSpecialization.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Anesthesiologist", "Dermatologist", "Cardiologist", "General Physician" }));
        cbNewUserSpecialization.setMaximumSize(new java.awt.Dimension(150, 30));
        cbNewUserSpecialization.setMinimumSize(new java.awt.Dimension(150, 30));
        cbNewUserSpecialization.setPreferredSize(new java.awt.Dimension(150, 30));
        cbNewUserSpecialization.setSize(new java.awt.Dimension(150, 30));
        cbNewUserSpecialization.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNewUserSpecializationActionPerformed(evt);
            }
        });

        lblDoctorDetails.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDoctorDetails.setText("Doctor Details");
        lblDoctorDetails.setBorder(new javax.swing.border.MatteBorder(null));

        lblNewUserSpecialization.setText("Specialization");

        lblNewUserHospital.setText("Hospital");

        cbNewUserHospital.setMaximumSize(new java.awt.Dimension(150, 30));
        cbNewUserHospital.setMinimumSize(new java.awt.Dimension(150, 30));
        cbNewUserHospital.setPreferredSize(new java.awt.Dimension(150, 30));
        cbNewUserHospital.setSize(new java.awt.Dimension(150, 30));
        cbNewUserHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNewUserHospitalActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("To be filled only if the Role selected is \"Doctor\".");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblNewDoctorCity.setText("City");

        cbNewDoctorCity.setMaximumSize(new java.awt.Dimension(150, 30));
        cbNewDoctorCity.setMinimumSize(new java.awt.Dimension(150, 30));
        cbNewDoctorCity.setPreferredSize(new java.awt.Dimension(150, 30));
        cbNewDoctorCity.setSize(new java.awt.Dimension(150, 30));
        cbNewDoctorCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNewDoctorCityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout NewDoctorSubPanelLayout = new javax.swing.GroupLayout(NewDoctorSubPanel);
        NewDoctorSubPanel.setLayout(NewDoctorSubPanelLayout);
        NewDoctorSubPanelLayout.setHorizontalGroup(
            NewDoctorSubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NewDoctorSubPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(NewDoctorSubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(NewDoctorSubPanelLayout.createSequentialGroup()
                        .addComponent(lblNewDoctorCity, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cbNewDoctorCity, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(NewDoctorSubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblDoctorDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(NewDoctorSubPanelLayout.createSequentialGroup()
                            .addComponent(lblNewUserSpecialization, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(cbNewUserSpecialization, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(NewDoctorSubPanelLayout.createSequentialGroup()
                            .addComponent(lblNewUserHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(cbNewUserHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        NewDoctorSubPanelLayout.setVerticalGroup(
            NewDoctorSubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NewDoctorSubPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblDoctorDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(NewDoctorSubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNewUserSpecialization, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbNewUserSpecialization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(NewDoctorSubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNewDoctorCity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbNewDoctorCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(NewDoctorSubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNewUserHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbNewUserHospital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41))
        );

        javax.swing.GroupLayout NewUserJPanelLayout = new javax.swing.GroupLayout(NewUserJPanel);
        NewUserJPanel.setLayout(NewUserJPanelLayout);
        NewUserJPanelLayout.setHorizontalGroup(
            NewUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NewUserJPanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(NewUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNewUser, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(NewUserJPanelLayout.createSequentialGroup()
                        .addGroup(NewUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(NewUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(NewUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(NewUserJPanelLayout.createSequentialGroup()
                                        .addComponent(lblLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtLastName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(NewUserJPanelLayout.createSequentialGroup()
                                        .addComponent(lblFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblPatientName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(NewUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPatientDetails, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NewUserJPanelLayout.createSequentialGroup()
                                        .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NewUserJPanelLayout.createSequentialGroup()
                                        .addComponent(lblGender, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cbGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(NewUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, NewUserJPanelLayout.createSequentialGroup()
                                    .addGroup(NewUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblEmailId, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblPhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(NewUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtEmailId, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtPhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(lblPatientContact, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(48, 48, 48)
                        .addGroup(NewUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(NewUserJPanelLayout.createSequentialGroup()
                                .addComponent(lblNewUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtNewUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(NewUserJPanelLayout.createSequentialGroup()
                                .addGroup(NewUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(NewUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(NewUserJPanelLayout.createSequentialGroup()
                                            .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnNewUserSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, NewUserJPanelLayout.createSequentialGroup()
                                            .addComponent(lblHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(cbNewUserHouse, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(NewUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblAddressDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(NewUserJPanelLayout.createSequentialGroup()
                                                .addGroup(NewUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lblCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lblCity2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(NewUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(txtZipCode, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                                                    .addComponent(cbNewUserCity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(cbNewUserCommunity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                            .addGroup(NewUserJPanelLayout.createSequentialGroup()
                                                .addComponent(lblRole, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(cbRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(NewUserJPanelLayout.createSequentialGroup()
                                                .addComponent(lblNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(lblLoginDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                                .addComponent(NewDoctorSubPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(23, 23, 23))
        );
        NewUserJPanelLayout.setVerticalGroup(
            NewUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NewUserJPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lblNewUser, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(NewUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(NewUserJPanelLayout.createSequentialGroup()
                        .addComponent(lblPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(NewUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCity2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(NewUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbNewUserCommunity, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(NewUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPatientDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbNewUserHouse, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(NewUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(NewUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGender, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(lblPatientContact, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(NewUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(NewUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEmailId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmailId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(105, 105, 105)
                        .addGroup(NewUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNewUserSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49))
                    .addGroup(NewUserJPanelLayout.createSequentialGroup()
                        .addGroup(NewUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(NewUserJPanelLayout.createSequentialGroup()
                                .addComponent(lblAddressDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cbNewUserCity)
                                .addGap(115, 115, 115)
                                .addGroup(NewUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(lblLoginDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(NewDoctorSubPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(NewUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNewUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNewUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(NewUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNewPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(NewUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRole, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );

        getContentPane().add(NewUserJPanel, "card3");

        WelcomeJPanel.setBackground(new java.awt.Color(204, 204, 204));

        lblWelcome.setFont(new java.awt.Font("Helvetica", 1, 48)); // NOI18N
        lblWelcome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblWelcome.setText("WELCOME TO MED GUI APP");
        lblWelcome.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblWelcome.setMaximumSize(new java.awt.Dimension(600, 110));
        lblWelcome.setMinimumSize(new java.awt.Dimension(600, 110));
        lblWelcome.setPreferredSize(new java.awt.Dimension(600, 110));
        lblWelcome.setSize(new java.awt.Dimension(600, 110));

        btnAddPatient.setText("Add New User");
        btnAddPatient.setMaximumSize(new java.awt.Dimension(100, 30));
        btnAddPatient.setMinimumSize(new java.awt.Dimension(100, 30));
        btnAddPatient.setPreferredSize(new java.awt.Dimension(100, 30));
        btnAddPatient.setSize(new java.awt.Dimension(100, 30));
        btnAddPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPatientActionPerformed(evt);
            }
        });

        btnViewEditLocation.setText("View/Edit Location");
        btnViewEditLocation.setMaximumSize(new java.awt.Dimension(100, 30));
        btnViewEditLocation.setMinimumSize(new java.awt.Dimension(100, 30));
        btnViewEditLocation.setPreferredSize(new java.awt.Dimension(100, 30));
        btnViewEditLocation.setSize(new java.awt.Dimension(100, 30));
        btnViewEditLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewEditLocationActionPerformed(evt);
            }
        });

        btnEditPatient.setText("View/Edit User");
        btnEditPatient.setMaximumSize(new java.awt.Dimension(100, 30));
        btnEditPatient.setMinimumSize(new java.awt.Dimension(100, 30));
        btnEditPatient.setPreferredSize(new java.awt.Dimension(100, 30));
        btnEditPatient.setSize(new java.awt.Dimension(100, 30));
        btnEditPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditPatientActionPerformed(evt);
            }
        });

        btnAddNewLocation.setText("Add New Location");
        btnAddNewLocation.setMaximumSize(new java.awt.Dimension(100, 30));
        btnAddNewLocation.setMinimumSize(new java.awt.Dimension(100, 30));
        btnAddNewLocation.setPreferredSize(new java.awt.Dimension(100, 30));
        btnAddNewLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewLocationActionPerformed(evt);
            }
        });

        btnAddNewEncounter.setText("Add New Encounter");
        btnAddNewEncounter.setMaximumSize(new java.awt.Dimension(100, 30));
        btnAddNewEncounter.setMinimumSize(new java.awt.Dimension(100, 30));
        btnAddNewEncounter.setPreferredSize(new java.awt.Dimension(100, 30));
        btnAddNewEncounter.setSize(new java.awt.Dimension(100, 30));
        btnAddNewEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewEncounterActionPerformed(evt);
            }
        });

        btnViewEditEncounter.setText("View/Edit Encounter");
        btnViewEditEncounter.setMaximumSize(new java.awt.Dimension(100, 30));
        btnViewEditEncounter.setMinimumSize(new java.awt.Dimension(100, 30));
        btnViewEditEncounter.setPreferredSize(new java.awt.Dimension(100, 30));
        btnViewEditEncounter.setSize(new java.awt.Dimension(100, 30));
        btnViewEditEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewEditEncounterActionPerformed(evt);
            }
        });

        btnLogOut.setText("Log Out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout WelcomeJPanelLayout = new javax.swing.GroupLayout(WelcomeJPanel);
        WelcomeJPanel.setLayout(WelcomeJPanelLayout);
        WelcomeJPanelLayout.setHorizontalGroup(
            WelcomeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WelcomeJPanelLayout.createSequentialGroup()
                .addContainerGap(100, Short.MAX_VALUE)
                .addGroup(WelcomeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, WelcomeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 1100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(WelcomeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, WelcomeJPanelLayout.createSequentialGroup()
                                .addComponent(btnAddNewEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnViewEditEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(WelcomeJPanelLayout.createSequentialGroup()
                                .addComponent(btnAddNewLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnViewEditLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(WelcomeJPanelLayout.createSequentialGroup()
                                .addComponent(btnAddPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(btnEditPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(btnLogOut, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(100, 100, 100))
        );
        WelcomeJPanelLayout.setVerticalGroup(
            WelcomeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WelcomeJPanelLayout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(lblWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83)
                .addGroup(WelcomeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(WelcomeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddNewLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewEditLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(WelcomeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddNewEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewEditEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 202, Short.MAX_VALUE)
                .addComponent(btnLogOut)
                .addGap(44, 44, 44))
        );

        getContentPane().add(WelcomeJPanel, "card4");

        lblTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblTitle.setText("View Details");
        lblTitle.setToolTipText("");

        tblViewPersonData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "User Name", "Role", "Email", "Gender"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblViewPersonData);

        btnViewPerson.setText("View");
        btnViewPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPersonActionPerformed(evt);
            }
        });

        btnEditPerson.setText("Edit");
        btnEditPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditPersonActionPerformed(evt);
            }
        });

        btnDeletePerson.setText("Delete");
        btnDeletePerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletePersonActionPerformed(evt);
            }
        });

        lblUpdateLastName.setText("Last Name");

        lblUpdateFirstName.setText("First Name");

        lblUpdateDetails.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUpdateDetails.setText("Update Details");
        lblUpdateDetails.setBorder(new javax.swing.border.MatteBorder(null));

        txtFirstNameUpdate.setMaximumSize(new java.awt.Dimension(150, 30));
        txtFirstNameUpdate.setMinimumSize(new java.awt.Dimension(150, 30));
        txtFirstNameUpdate.setPreferredSize(new java.awt.Dimension(150, 30));
        txtFirstNameUpdate.setSize(new java.awt.Dimension(150, 30));
        txtFirstNameUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFirstNameUpdateActionPerformed(evt);
            }
        });

        txtLastNameUpdate.setMaximumSize(new java.awt.Dimension(150, 30));
        txtLastNameUpdate.setMinimumSize(new java.awt.Dimension(150, 30));
        txtLastNameUpdate.setPreferredSize(new java.awt.Dimension(150, 30));
        txtLastNameUpdate.setSize(new java.awt.Dimension(150, 30));
        txtLastNameUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLastNameUpdateActionPerformed(evt);
            }
        });

        lblUpdatePhoneNo.setText("Phone Number");

        txtEmailIdUpdate.setMaximumSize(new java.awt.Dimension(150, 30));
        txtEmailIdUpdate.setMinimumSize(new java.awt.Dimension(150, 30));
        txtEmailIdUpdate.setPreferredSize(new java.awt.Dimension(150, 30));
        txtEmailIdUpdate.setSize(new java.awt.Dimension(150, 30));
        txtEmailIdUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailIdUpdateActionPerformed(evt);
            }
        });

        lblUpdateEmailId.setText("Email ID");

        txtPhoneNoUpdate.setMaximumSize(new java.awt.Dimension(150, 30));
        txtPhoneNoUpdate.setMinimumSize(new java.awt.Dimension(150, 30));
        txtPhoneNoUpdate.setPreferredSize(new java.awt.Dimension(150, 30));
        txtPhoneNoUpdate.setSize(new java.awt.Dimension(150, 30));
        txtPhoneNoUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneNoUpdateActionPerformed(evt);
            }
        });

        lblUpdateAge.setText("Age");

        txtAgeUpdate.setMaximumSize(new java.awt.Dimension(150, 30));
        txtAgeUpdate.setMinimumSize(new java.awt.Dimension(150, 30));
        txtAgeUpdate.setPreferredSize(new java.awt.Dimension(150, 30));
        txtAgeUpdate.setSize(new java.awt.Dimension(150, 30));
        txtAgeUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeUpdateActionPerformed(evt);
            }
        });

        cbGenderUpdate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        cbGenderUpdate.setMaximumSize(new java.awt.Dimension(200, 30));
        cbGenderUpdate.setMinimumSize(new java.awt.Dimension(200, 30));
        cbGenderUpdate.setPreferredSize(new java.awt.Dimension(200, 30));
        cbGenderUpdate.setSize(new java.awt.Dimension(200, 30));

        lblUpdateGender.setText("Gender");

        lblHouseUpdate.setText("House");

        lblCityUpdate.setText("City");

        lblCommunityUpdate.setText("Community");

        lblZipCodeUpdate.setText("Zip Code");

        txtHouseUpdate.setMaximumSize(new java.awt.Dimension(150, 30));
        txtHouseUpdate.setMinimumSize(new java.awt.Dimension(150, 30));
        txtHouseUpdate.setPreferredSize(new java.awt.Dimension(150, 30));
        txtHouseUpdate.setSize(new java.awt.Dimension(150, 30));
        txtHouseUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHouseUpdateActionPerformed(evt);
            }
        });

        btnUpdatePrsnDet.setText("Update Details");
        btnUpdatePrsnDet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatePrsnDetActionPerformed(evt);
            }
        });

        lblRoleUpdate.setText("Role");

        cbRoleUpdate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SysAdmin", "HospAdmin", "CommAdmin", "Patient", "Doctor" }));
        cbRoleUpdate.setMaximumSize(new java.awt.Dimension(200, 30));
        cbRoleUpdate.setMinimumSize(new java.awt.Dimension(200, 30));
        cbRoleUpdate.setPreferredSize(new java.awt.Dimension(200, 30));
        cbRoleUpdate.setSize(new java.awt.Dimension(200, 30));

        UpdateDoctorSubPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("To be filled only if the Role selected is \"Doctor\".");
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        cbUpdateSpecialization.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Anesthesiologist", "Dermatologist", "Cardiologist", "General Physician" }));
        cbUpdateSpecialization.setMaximumSize(new java.awt.Dimension(150, 30));
        cbUpdateSpecialization.setMinimumSize(new java.awt.Dimension(150, 30));
        cbUpdateSpecialization.setPreferredSize(new java.awt.Dimension(150, 30));
        cbUpdateSpecialization.setSize(new java.awt.Dimension(150, 30));

        lblUpdateSpecialization.setText("Specialization");

        cbUpdateDoctorCity.setMaximumSize(new java.awt.Dimension(150, 30));
        cbUpdateDoctorCity.setMinimumSize(new java.awt.Dimension(150, 30));
        cbUpdateDoctorCity.setPreferredSize(new java.awt.Dimension(150, 30));
        cbUpdateDoctorCity.setSize(new java.awt.Dimension(150, 30));

        lblDocUpdateHospital.setText("Hospital");

        lblUpdateDoctorCity.setText("City");

        cbDocUpdateHospital.setMaximumSize(new java.awt.Dimension(150, 30));
        cbDocUpdateHospital.setMinimumSize(new java.awt.Dimension(150, 30));
        cbDocUpdateHospital.setPreferredSize(new java.awt.Dimension(150, 30));
        cbDocUpdateHospital.setSize(new java.awt.Dimension(150, 30));

        javax.swing.GroupLayout UpdateDoctorSubPanelLayout = new javax.swing.GroupLayout(UpdateDoctorSubPanel);
        UpdateDoctorSubPanel.setLayout(UpdateDoctorSubPanelLayout);
        UpdateDoctorSubPanelLayout.setHorizontalGroup(
            UpdateDoctorSubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UpdateDoctorSubPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
            .addGroup(UpdateDoctorSubPanelLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(UpdateDoctorSubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUpdateDoctorCity)
                    .addComponent(lblDocUpdateHospital)
                    .addComponent(lblUpdateSpecialization))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(UpdateDoctorSubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbUpdateDoctorCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbUpdateSpecialization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbDocUpdateHospital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63))
        );
        UpdateDoctorSubPanelLayout.setVerticalGroup(
            UpdateDoctorSubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UpdateDoctorSubPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(UpdateDoctorSubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUpdateSpecialization)
                    .addComponent(cbUpdateSpecialization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(UpdateDoctorSubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUpdateDoctorCity)
                    .addComponent(cbUpdateDoctorCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(UpdateDoctorSubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDocUpdateHospital)
                    .addComponent(cbDocUpdateHospital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnViewEditBack.setText("Back");
        btnViewEditBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewEditBackActionPerformed(evt);
            }
        });

        lblUserNameUpdate.setText("User Name");

        txtUserNameUpdate.setMaximumSize(new java.awt.Dimension(150, 30));
        txtUserNameUpdate.setMinimumSize(new java.awt.Dimension(150, 30));
        txtUserNameUpdate.setPreferredSize(new java.awt.Dimension(150, 30));
        txtUserNameUpdate.setSize(new java.awt.Dimension(150, 30));
        txtUserNameUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserNameUpdateActionPerformed(evt);
            }
        });

        lblPasswordUpdate.setText("Password");

        txtZipCodeUpdate.setMaximumSize(new java.awt.Dimension(150, 30));
        txtZipCodeUpdate.setMinimumSize(new java.awt.Dimension(150, 30));
        txtZipCodeUpdate.setPreferredSize(new java.awt.Dimension(150, 30));
        txtZipCodeUpdate.setSize(new java.awt.Dimension(150, 30));
        txtZipCodeUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtZipCodeUpdateActionPerformed(evt);
            }
        });

        cbCityUserUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCityUserUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ViewEditUserJPanelLayout = new javax.swing.GroupLayout(ViewEditUserJPanel);
        ViewEditUserJPanel.setLayout(ViewEditUserJPanelLayout);
        ViewEditUserJPanelLayout.setHorizontalGroup(
            ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewEditUserJPanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(ViewEditUserJPanelLayout.createSequentialGroup()
                        .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ViewEditUserJPanelLayout.createSequentialGroup()
                                .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblUpdateGender, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblUpdateAge, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(ViewEditUserJPanelLayout.createSequentialGroup()
                                        .addComponent(txtAgeUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblPasswordUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(258, 258, 258))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewEditUserJPanelLayout.createSequentialGroup()
                                        .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtPasswordUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(ViewEditUserJPanelLayout.createSequentialGroup()
                                                .addComponent(cbGenderUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(lblRoleUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(cbRoleUpdate, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGap(30, 30, 30))))
                            .addGroup(ViewEditUserJPanelLayout.createSequentialGroup()
                                .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(ViewEditUserJPanelLayout.createSequentialGroup()
                                        .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblUpdateEmailId, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblUpdatePhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtEmailIdUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtPhoneNoUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(ViewEditUserJPanelLayout.createSequentialGroup()
                                            .addComponent(lblUpdateLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtLastNameUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                                        .addGroup(ViewEditUserJPanelLayout.createSequentialGroup()
                                            .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(lblUpdateFirstName, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                                .addComponent(lblUpdateDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGap(18, 18, 18)
                                            .addComponent(txtFirstNameUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewEditUserJPanelLayout.createSequentialGroup()
                                        .addComponent(lblHouseUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtHouseUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(ViewEditUserJPanelLayout.createSequentialGroup()
                                        .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblZipCodeUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblCityUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtZipCodeUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cbCityUserUpdate, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(ViewEditUserJPanelLayout.createSequentialGroup()
                                        .addComponent(lblUserNameUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtUserNameUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(ViewEditUserJPanelLayout.createSequentialGroup()
                                        .addComponent(lblCommunityUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cbCommunityUserUpdate, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(30, 30, 30)))
                        .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(UpdateDoctorSubPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ViewEditUserJPanelLayout.createSequentialGroup()
                                .addComponent(btnUpdatePrsnDet, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnViewEditBack, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblTitle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ViewEditUserJPanelLayout.createSequentialGroup()
                                .addComponent(btnViewPerson)
                                .addGap(18, 18, 18)
                                .addComponent(btnEditPerson)
                                .addGap(18, 18, 18)
                                .addComponent(btnDeletePerson)))))
                .addGap(55, 55, 55))
        );
        ViewEditUserJPanelLayout.setVerticalGroup(
            ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewEditUserJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addGap(18, 18, 18)
                .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnViewPerson)
                    .addComponent(btnEditPerson)
                    .addComponent(btnDeletePerson))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(lblUpdateDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(ViewEditUserJPanelLayout.createSequentialGroup()
                        .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(ViewEditUserJPanelLayout.createSequentialGroup()
                                .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(ViewEditUserJPanelLayout.createSequentialGroup()
                                        .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblUpdateFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtFirstNameUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblUpdateLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtLastNameUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblUpdatePhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtPhoneNoUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(ViewEditUserJPanelLayout.createSequentialGroup()
                                        .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblCityUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cbCityUserUpdate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblCommunityUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cbCommunityUserUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblZipCodeUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtZipCodeUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblUpdateEmailId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEmailIdUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblUserNameUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtUserNameUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblUpdateAge, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtAgeUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblPasswordUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtPasswordUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUpdateGender, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbGenderUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblRoleUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbRoleUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(UpdateDoctorSubPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblHouseUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtHouseUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewEditUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnUpdatePrsnDet)
                        .addComponent(btnViewEditBack)))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        getContentPane().add(ViewEditUserJPanel, "card5");

        lblAddNewCity.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAddNewCity.setText("Add New City");
        lblAddNewCity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblAddNewCity.setMaximumSize(new java.awt.Dimension(200, 30));
        lblAddNewCity.setMinimumSize(new java.awt.Dimension(200, 30));
        lblAddNewCity.setPreferredSize(new java.awt.Dimension(200, 30));
        lblAddNewCity.setSize(new java.awt.Dimension(200, 30));

        lblAddNewCommunity.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAddNewCommunity.setText("Add New Community");
        lblAddNewCommunity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblAddNewCommunity.setMaximumSize(new java.awt.Dimension(200, 30));
        lblAddNewCommunity.setMinimumSize(new java.awt.Dimension(200, 30));
        lblAddNewCommunity.setPreferredSize(new java.awt.Dimension(200, 30));
        lblAddNewCommunity.setSize(new java.awt.Dimension(200, 30));

        lblAddNewHouse.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAddNewHouse.setText("Add New House");
        lblAddNewHouse.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblAddNewHouse.setMaximumSize(new java.awt.Dimension(200, 30));
        lblAddNewHouse.setMinimumSize(new java.awt.Dimension(200, 30));
        lblAddNewHouse.setPreferredSize(new java.awt.Dimension(200, 30));
        lblAddNewHouse.setSize(new java.awt.Dimension(200, 30));

        lblNewCity.setText("New City");

        lblNewHouse.setText("New House");

        lblNewCommunity.setText("New Community");

        btnSaveNewCommunity.setText("Save Community");
        btnSaveNewCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveNewCommunityActionPerformed(evt);
            }
        });

        btnSaveNewHouse.setText("Save House");
        btnSaveNewHouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveNewHouseActionPerformed(evt);
            }
        });

        btnSaveNewCity.setText("Save City");
        btnSaveNewCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveNewCityActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add New Locations");
        jLabel1.setBorder(new javax.swing.border.MatteBorder(null));

        lblAddNewHospital.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAddNewHospital.setText("Add New Hospital");
        lblAddNewHospital.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblAddNewHospital.setMaximumSize(new java.awt.Dimension(200, 30));
        lblAddNewHospital.setMinimumSize(new java.awt.Dimension(200, 30));
        lblAddNewHospital.setPreferredSize(new java.awt.Dimension(200, 30));
        lblAddNewHospital.setSize(new java.awt.Dimension(200, 30));

        lblNewHospital.setText("New Hospital");

        btnSaveNewHospital.setText("Save Hospital");
        btnSaveNewHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveNewHospitalActionPerformed(evt);
            }
        });

        btnNewLocationBack.setText("Back");
        btnNewLocationBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewLocationBackActionPerformed(evt);
            }
        });

        lblNewHospCity.setText("City");

        cbNewHospCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNewHospCityActionPerformed(evt);
            }
        });

        lblNewHospCommunity.setText("Community");

        cbNewHospCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNewHospCommunityActionPerformed(evt);
            }
        });

        lblNewHouseCity.setText("City");

        lblNewHouseCommunity.setText("Community");

        javax.swing.GroupLayout NewLocationJPanelLayout = new javax.swing.GroupLayout(NewLocationJPanel);
        NewLocationJPanel.setLayout(NewLocationJPanelLayout);
        NewLocationJPanelLayout.setHorizontalGroup(
            NewLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NewLocationJPanelLayout.createSequentialGroup()
                .addGap(552, 552, 552)
                .addComponent(btnNewLocationBack, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(NewLocationJPanelLayout.createSequentialGroup()
                .addGap(245, 245, 245)
                .addGroup(NewLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(NewLocationJPanelLayout.createSequentialGroup()
                        .addGroup(NewLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(NewLocationJPanelLayout.createSequentialGroup()
                                .addComponent(btnSaveNewHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NewLocationJPanelLayout.createSequentialGroup()
                                .addGroup(NewLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(NewLocationJPanelLayout.createSequentialGroup()
                                        .addComponent(lblNewHospCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbNewHospCommunity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(NewLocationJPanelLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(lblAddNewHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, NewLocationJPanelLayout.createSequentialGroup()
                                        .addComponent(lblNewCity, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNewCity))
                                    .addComponent(lblAddNewCity, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnSaveNewCity, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(NewLocationJPanelLayout.createSequentialGroup()
                                        .addComponent(lblNewHospCity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbNewHospCity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(NewLocationJPanelLayout.createSequentialGroup()
                                        .addComponent(lblNewHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNewHospital)))
                                .addGap(146, 146, 146)))
                        .addGroup(NewLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NewLocationJPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(NewLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAddNewCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(NewLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnSaveNewCommunity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NewLocationJPanelLayout.createSequentialGroup()
                                            .addComponent(lblNewCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtNewCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NewLocationJPanelLayout.createSequentialGroup()
                                .addComponent(lblNewHouseCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbNewHouseCommunity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NewLocationJPanelLayout.createSequentialGroup()
                                .addComponent(lblNewHouseCity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbNewHouseCity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(NewLocationJPanelLayout.createSequentialGroup()
                                .addGroup(NewLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(NewLocationJPanelLayout.createSequentialGroup()
                                        .addComponent(lblNewHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNewHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblAddNewHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnSaveNewHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(297, 297, 297))
        );
        NewLocationJPanelLayout.setVerticalGroup(
            NewLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NewLocationJPanelLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(NewLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(NewLocationJPanelLayout.createSequentialGroup()
                        .addComponent(lblAddNewCity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(NewLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(NewLocationJPanelLayout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(lblNewCity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtNewCity, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnSaveNewCity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(NewLocationJPanelLayout.createSequentialGroup()
                        .addComponent(lblAddNewCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(NewLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNewCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNewCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnSaveNewCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44)
                .addGroup(NewLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(NewLocationJPanelLayout.createSequentialGroup()
                        .addComponent(lblAddNewHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(NewLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbNewHospCity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNewHospCity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(NewLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbNewHospCommunity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNewHospCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20))
                    .addGroup(NewLocationJPanelLayout.createSequentialGroup()
                        .addComponent(lblAddNewHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(NewLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbNewHouseCity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNewHouseCity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(NewLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbNewHouseCommunity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNewHouseCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)))
                .addGroup(NewLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNewHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNewHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNewHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNewHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(NewLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveNewHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSaveNewHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE)
                .addComponent(btnNewLocationBack)
                .addGap(39, 39, 39))
        );

        getContentPane().add(NewLocationJPanel, "card6");

        tblHouse.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "House", "Community", "City"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPaneHouse.setViewportView(tblHouse);

        tblCity.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "City"
            }
        ));
        jScrollPaneCity.setViewportView(tblCity);

        tblCommmunity.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Community"
            }
        ));
        jScrollPaneCommunity.setViewportView(tblCommmunity);

        tblHospital.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Hospital", "Community", "City"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPaneHospital.setViewportView(tblHospital);

        lblViewEditLocation.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblViewEditLocation.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblViewEditLocation.setText("View/Edit Locations");

        lblViewEditCommunity.setText("Community");

        lblViewEditHospital.setText("Hospital");

        lblViewEditCity.setText("City");

        lblViewEditHouse.setText("House");

        lblViewEditCityName.setText("City");

        lblViewEditCommunityName.setText("Community");

        btnSubmitCityCommunity.setText("Submit");
        btnSubmitCityCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitCityCommunityActionPerformed(evt);
            }
        });

        btnUpdateHouseHosp.setText("Submit");
        btnUpdateHouseHosp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateHouseHospActionPerformed(evt);
            }
        });

        btnEditCommunity.setText("Edit");
        btnEditCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditCommunityActionPerformed(evt);
            }
        });

        btnEditCity.setText("Edit");
        btnEditCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditCityActionPerformed(evt);
            }
        });

        btnEditHospital.setText("Edit");
        btnEditHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditHospitalActionPerformed(evt);
            }
        });

        btnViewHospital.setText("View");
        btnViewHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewHospitalActionPerformed(evt);
            }
        });

        btnEditHouse.setText("Edit");
        btnEditHouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditHouseActionPerformed(evt);
            }
        });

        btnViewHouse.setText("View");
        btnViewHouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewHouseActionPerformed(evt);
            }
        });

        btnBackViewEditLoc.setText("Back");
        btnBackViewEditLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackViewEditLocActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ViewEditLocationJPanelLayout = new javax.swing.GroupLayout(ViewEditLocationJPanel);
        ViewEditLocationJPanel.setLayout(ViewEditLocationJPanelLayout);
        ViewEditLocationJPanelLayout.setHorizontalGroup(
            ViewEditLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewEditLocationJPanelLayout.createSequentialGroup()
                .addGroup(ViewEditLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ViewEditLocationJPanelLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(ViewEditLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPaneCity, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ViewEditLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblViewEditCommunityName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblViewEditCityName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(ViewEditLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtViewEditCityName)
                            .addComponent(jScrollPaneCommunity, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                            .addComponent(txtViewEditCommunityName))
                        .addGap(50, 50, 50))
                    .addGroup(ViewEditLocationJPanelLayout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addGroup(ViewEditLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnBackViewEditLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSubmitCityCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 157, Short.MAX_VALUE)))
                .addGroup(ViewEditLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPaneHospital, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewEditLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblViewEditCommunity, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblViewEditHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblViewEditCity, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblViewEditHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(54, 54, 54)
                .addGroup(ViewEditLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPaneHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ViewEditLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtViewEditHouseName, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtViewEditHospitalName, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(cbCityHouseHospUpdate, javax.swing.GroupLayout.Alignment.LEADING, 0, 200, Short.MAX_VALUE)
                        .addComponent(cbCommHouseHospUpdate, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(27, 27, 27))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewEditLocationJPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnUpdateHouseHosp, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(303, 303, 303))
            .addGroup(ViewEditLocationJPanelLayout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(btnEditCity)
                .addGap(145, 145, 145)
                .addComponent(btnEditCommunity)
                .addGap(177, 177, 177)
                .addComponent(btnViewHospital)
                .addGap(29, 29, 29)
                .addComponent(btnEditHospital)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEditHouse)
                .addGap(29, 29, 29)
                .addComponent(btnViewHouse)
                .addGap(113, 113, 113))
            .addGroup(ViewEditLocationJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblViewEditLocation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        ViewEditLocationJPanelLayout.setVerticalGroup(
            ViewEditLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewEditLocationJPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lblViewEditLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(ViewEditLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPaneHouse, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
                    .addComponent(jScrollPaneHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPaneCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPaneCity, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(ViewEditLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditCommunity)
                    .addComponent(btnEditCity)
                    .addComponent(btnEditHospital)
                    .addComponent(btnViewHospital)
                    .addComponent(btnViewHouse)
                    .addComponent(btnEditHouse))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(ViewEditLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ViewEditLocationJPanelLayout.createSequentialGroup()
                        .addGroup(ViewEditLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblViewEditCity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbCityHouseHospUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ViewEditLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblViewEditCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbCommHouseHospUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(ViewEditLocationJPanelLayout.createSequentialGroup()
                        .addGroup(ViewEditLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtViewEditCityName)
                            .addComponent(lblViewEditCityName, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ViewEditLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblViewEditCommunityName, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(txtViewEditCommunityName))))
                .addGroup(ViewEditLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ViewEditLocationJPanelLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(btnSubmitCityCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ViewEditLocationJPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ViewEditLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ViewEditLocationJPanelLayout.createSequentialGroup()
                                .addComponent(txtViewEditHospitalName)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtViewEditHouseName))
                            .addGroup(ViewEditLocationJPanelLayout.createSequentialGroup()
                                .addComponent(lblViewEditHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblViewEditHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(14, 14, 14)
                .addGroup(ViewEditLocationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdateHouseHosp, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBackViewEditLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7))
        );

        getContentPane().add(ViewEditLocationJPanel, "card7");

        lblEncouter.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblEncouter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEncouter.setText("Add New Encounter");
        lblEncouter.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblDocNameEncounter.setText("Doctor Name");

        lblCityEncounter.setText("City Name");

        lblAppointment.setText("Appointment");

        txtPatNameEncounter1.setText("Hospital Name");

        lblDocNameEncounter1.setText("Community Name");

        cbNewEncounterCity.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbNewEncounterCityItemStateChanged(evt);
            }
        });

        cbNewHospitalEncounter.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbNewHospitalEncounterItemStateChanged(evt);
            }
        });

        cbNewEncounterCommunity.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbNewEncounterCommunityItemStateChanged(evt);
            }
        });
        cbNewEncounterCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNewEncounterCommunityActionPerformed(evt);
            }
        });

        cbNewDoctorEncounter.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbNewDoctorEncounterItemStateChanged(evt);
            }
        });
        cbNewDoctorEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNewDoctorEncounterActionPerformed(evt);
            }
        });

        btnSubmitNewEncounter.setText("Submit");
        btnSubmitNewEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitNewEncounterActionPerformed(evt);
            }
        });

        lblPatientNameEncounter.setText("Patient Name");

        btnBackNewEncounter.setText("Back");
        btnBackNewEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackNewEncounterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AddNewEncounterPanelLayout = new javax.swing.GroupLayout(AddNewEncounterPanel);
        AddNewEncounterPanel.setLayout(AddNewEncounterPanelLayout);
        AddNewEncounterPanelLayout.setHorizontalGroup(
            AddNewEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddNewEncounterPanelLayout.createSequentialGroup()
                .addContainerGap(346, Short.MAX_VALUE)
                .addGroup(AddNewEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(AddNewEncounterPanelLayout.createSequentialGroup()
                        .addComponent(btnBackNewEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 125, Short.MAX_VALUE)
                        .addComponent(btnSubmitNewEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblEncouter, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, AddNewEncounterPanelLayout.createSequentialGroup()
                        .addGroup(AddNewEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDocNameEncounter1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCityEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPatNameEncounter1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDocNameEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPatientNameEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(AddNewEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbNewEncounterCity, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbNewHospitalEncounter, javax.swing.GroupLayout.Alignment.TRAILING, 0, 359, Short.MAX_VALUE)
                            .addComponent(cbNewEncounterCommunity, javax.swing.GroupLayout.Alignment.TRAILING, 0, 359, Short.MAX_VALUE)
                            .addComponent(cbNewDoctorEncounter, javax.swing.GroupLayout.Alignment.TRAILING, 0, 359, Short.MAX_VALUE)
                            .addComponent(dtNewAppointment, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtNewEncounterPatient))))
                .addGap(467, 467, 467))
        );
        AddNewEncounterPanelLayout.setVerticalGroup(
            AddNewEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddNewEncounterPanelLayout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(lblEncouter, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77)
                .addGroup(AddNewEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCityEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbNewEncounterCity, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(AddNewEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDocNameEncounter1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbNewEncounterCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(AddNewEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPatNameEncounter1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbNewHospitalEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(AddNewEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDocNameEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbNewDoctorEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(AddNewEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dtNewAppointment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(AddNewEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientNameEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNewEncounterPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addGroup(AddNewEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmitNewEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBackNewEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(141, Short.MAX_VALUE))
        );

        getContentPane().add(AddNewEncounterPanel, "card8");

        lblEncouter1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblEncouter1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEncouter1.setText("Edit Encounter");
        lblEncouter1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblEncounter.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Doctor Name", "Patient Name", "Appointment"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblEncounter);

        btnSearchPatient.setText("Search Patient");
        btnSearchPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchPatientActionPerformed(evt);
            }
        });

        btnViewEncounter.setText("View");
        btnViewEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewEncounterActionPerformed(evt);
            }
        });

        btnEditEncounter.setText("Edit");
        btnEditEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditEncounterActionPerformed(evt);
            }
        });

        lblBPedit.setText("Blood Pressure");

        btnBackEncounter.setText("Back");
        btnBackEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackEncounterActionPerformed(evt);
            }
        });

        lblTempEdit.setText("Temperature");

        lblWeight.setText("Weight");

        lblHeight.setText("Height");

        lblComments.setText("Comments");

        lblPulseRate.setText("Pulse Rate");

        txtComment.setColumns(20);
        txtComment.setRows(5);
        jScrollPane3.setViewportView(txtComment);

        lvlVitals.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lvlVitals.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lvlVitals.setText("Vital Signs");
        lvlVitals.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblDocNameEncounter2.setText("Community Name");

        cbNewEncounterCity1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbNewEncounterCity1ItemStateChanged(evt);
            }
        });
        cbNewEncounterCity1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNewEncounterCity1ActionPerformed(evt);
            }
        });

        cbNewHospitalEncounter1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbNewHospitalEncounter1ItemStateChanged(evt);
            }
        });

        cbNewEncounterCommunity1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbNewEncounterCommunity1ItemStateChanged(evt);
            }
        });
        cbNewEncounterCommunity1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNewEncounterCommunity1ActionPerformed(evt);
            }
        });

        cbNewDoctorEncounter1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbNewDoctorEncounter1ItemStateChanged(evt);
            }
        });
        cbNewDoctorEncounter1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNewDoctorEncounter1ActionPerformed(evt);
            }
        });

        btnSubmitNewEncounter1.setText("Submit");
        btnSubmitNewEncounter1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitNewEncounter1ActionPerformed(evt);
            }
        });

        lblDocNameEncounter3.setText("Doctor Name");

        lblPatientNameEncounter1.setText("Patient Name");

        lblCityEncounter1.setText("City Name");

        lblAppointment1.setText("Appointment");

        txtPatNameEncounter2.setText("Hospital Name");

        javax.swing.GroupLayout EditEncounterPanelLayout = new javax.swing.GroupLayout(EditEncounterPanel);
        EditEncounterPanel.setLayout(EditEncounterPanelLayout);
        EditEncounterPanelLayout.setHorizontalGroup(
            EditEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditEncounterPanelLayout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addGroup(EditEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(lblEncouter1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(EditEncounterPanelLayout.createSequentialGroup()
                        .addComponent(btnBackEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                        .addComponent(btnViewEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(btnEditEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(EditEncounterPanelLayout.createSequentialGroup()
                        .addComponent(txtSearchPatient)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearchPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(144, 144, 144)
                .addGroup(EditEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(EditEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(lvlVitals, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, EditEncounterPanelLayout.createSequentialGroup()
                            .addComponent(lblBPedit, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtBPedit))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, EditEncounterPanelLayout.createSequentialGroup()
                            .addComponent(lblTempEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtTempEdit))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, EditEncounterPanelLayout.createSequentialGroup()
                            .addComponent(lblHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtHeight))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, EditEncounterPanelLayout.createSequentialGroup()
                            .addComponent(lblWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtWeight))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, EditEncounterPanelLayout.createSequentialGroup()
                            .addComponent(lblPulseRate, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtPulseRate))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, EditEncounterPanelLayout.createSequentialGroup()
                            .addComponent(lblComments, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(EditEncounterPanelLayout.createSequentialGroup()
                        .addGroup(EditEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDocNameEncounter2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCityEncounter1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPatNameEncounter2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDocNameEncounter3, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAppointment1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPatientNameEncounter1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(EditEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbNewEncounterCity1, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbNewHospitalEncounter1, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbNewEncounterCommunity1, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbNewDoctorEncounter1, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dtNewAppointment1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtNewEncounterPatient1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnSubmitNewEncounter1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(125, 125, 125))
        );
        EditEncounterPanelLayout.setVerticalGroup(
            EditEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditEncounterPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(EditEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EditEncounterPanelLayout.createSequentialGroup()
                        .addComponent(lvlVitals, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(EditEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblBPedit, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBPedit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(EditEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTempEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTempEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(EditEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(EditEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(EditEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPulseRate, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPulseRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(EditEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblComments, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(EditEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCityEncounter1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbNewEncounterCity1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(EditEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDocNameEncounter2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbNewEncounterCommunity1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(EditEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPatNameEncounter2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbNewHospitalEncounter1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(EditEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDocNameEncounter3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbNewDoctorEncounter1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(EditEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dtNewAppointment1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblAppointment1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(EditEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPatientNameEncounter1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNewEncounterPatient1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29))
                    .addGroup(EditEncounterPanelLayout.createSequentialGroup()
                        .addComponent(lblEncouter1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(EditEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnSearchPatient)
                            .addComponent(txtSearchPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)))
                .addGroup(EditEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBackEncounter)
                    .addComponent(btnSubmitNewEncounter1)
                    .addComponent(btnViewEncounter)
                    .addComponent(btnEditEncounter))
                .addGap(23, 23, 23))
        );

        getContentPane().add(EditEncounterPanel, "card9");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserNameActionPerformed

    private void pwdLoginPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwdLoginPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pwdLoginPasswordActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        String userName = txtUserName.getText();
        String password = new String(pwdLoginPassword.getPassword());
        boolean flag = false;

        if(userName.equals("") || password.equals(""))
        JOptionPane.showMessageDialog(this, "Please enter User Name and/or Password.");
        else
        {
            for(Person person : system.getPersonList())
            {
                if(person.getUserName().equals(userName) && person.getPassword().equals(password))
                {   
                    LoginJPanel.setVisible(false);
                    WelcomeJPanel.setVisible(true);
                    NewUserJPanel.setVisible(false);
                    flag = true;
                    globalRole = person.getRole();
                    
                switch(globalRole){
                    case "sysadmin": {
                        btnAddPatient.setVisible(true);
                        btnEditPatient.setVisible(true);
                        btnAddNewEncounter.setVisible(true);
                        btnViewEditEncounter.setVisible(true);
                        btnAddNewLocation.setVisible(true);
                        btnViewEditLocation.setVisible(true);
                        break;
                    }
                    case "hospadmin" : {
                        btnAddPatient.setVisible(true);
                        btnEditPatient.setVisible(true);
                        btnAddNewEncounter.setVisible(true);
                        btnViewEditEncounter.setVisible(true);
                        btnAddNewLocation.setVisible(true);
                        btnViewEditLocation.setVisible(true);
                        break;
                    }
                    case "commadmin": {
                        btnAddPatient.setVisible(false);
                        btnEditPatient.setVisible(false);
                        btnAddNewEncounter.setVisible(false);
                        btnViewEditEncounter.setVisible(false);
                        btnAddNewLocation.setVisible(true);
                        btnViewEditLocation.setVisible(true);
                        break;
                    }
                    case "doctor": {
                        btnAddPatient.setVisible(false);
                        btnEditPatient.setVisible(false);
                        btnAddNewEncounter.setVisible(true);
                        btnViewEditEncounter.setVisible(true);
                        btnAddNewLocation.setVisible(false);
                        btnViewEditLocation.setVisible(false);
                        break;
                    }
                    case "patient" : {
                        btnAddPatient.setVisible(false);
                        btnEditPatient.setVisible(true);
                        btnAddNewEncounter.setVisible(true);
                        btnViewEditEncounter.setVisible(true);
                        btnAddNewLocation.setVisible(false);
                        btnViewEditLocation.setVisible(false);
                        break;
                    }
                 }
                }
            }
        }
        
        if(!flag)
            JOptionPane.showMessageDialog(this, "Please enter a valid user name and password.");
    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnEditPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditPatientActionPerformed
        // TODO add your handling code here:
        NewUserJPanel.setVisible(false);
        LoginJPanel.setVisible(false);
        WelcomeJPanel.setVisible(false);
        NewLocationJPanel.setVisible(false);
        ViewEditLocationJPanel.setVisible(false);
        ViewEditUserJPanel.setVisible(true);
        AddNewEncounterPanel.setVisible(false);
        getUserTableData();
        
        
        if(globalRole == "HospAdmin")
            btnDeletePerson.setVisible(false);
        
        for(City city : system.getCityList()){
            cbCityUserUpdate.addItem(city.getCityName());
            cbUpdateDoctorCity.addItem(city.getCityName());
        }
        
        for(Community community : system.getCommunityList())
            cbCommunityUserUpdate.addItem(community.getCommunityName());
        
        
        for(Hospital hospital : system.getHospitalList().getHospitalList())
            cbDocUpdateHospital.addItem(hospital.getHospName());
    }//GEN-LAST:event_btnEditPatientActionPerformed

    private void btnAddPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPatientActionPerformed
        // TODO add your handling code here:
        NewUserJPanel.setVisible(true);
        LoginJPanel.setVisible(false);
        WelcomeJPanel.setVisible(false);
        NewLocationJPanel.setVisible(false);
        ViewEditLocationJPanel.setVisible(false);
        ViewEditUserJPanel.setVisible(false);
        AddNewEncounterPanel.setVisible(false);
        
        for(City city : system.getCityList()){
            cbNewUserCity.addItem(city.getCityName());
            cbNewDoctorCity.addItem(city.getCityName());
        }
        
        for(Community community : system.getCommunityList())
            cbNewUserCommunity.addItem(community.getCommunityName());
        
        for(Hospital hospital : system.getHospitalList().getHospitalList())
            cbNewUserHospital.addItem(hospital.getHospName());
        
        for(House house : system.getHouseList())
            cbNewUserHouse.addItem(house.getHouseName());
    }//GEN-LAST:event_btnAddPatientActionPerformed

    private void btnViewPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPersonActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblViewPersonData.getSelectedRow();

        if(selectedRow<0){
            JOptionPane.showMessageDialog(this,"Please Select a row to view!");
            return;
        }

        btnUpdatePrsnDet.setVisible(false);

        DefaultTableModel model  = (DefaultTableModel) tblViewPersonData.getModel();
        Person  person = (Person) model.getValueAt(selectedRow, 0);

        txtFirstNameUpdate.setEnabled(false);
        txtLastNameUpdate.setEnabled(false);
        txtPhoneNoUpdate.setEnabled(false);
        txtEmailIdUpdate.setEnabled(false);        
        txtAgeUpdate.setEnabled(false);
        cbGenderUpdate.setEnabled(false);
        txtHouseUpdate.setEnabled(false);
        cbCityUserUpdate.setEnabled(false);
        cbCommunityUserUpdate.setEnabled(false);
        cbDocUpdateHospital.setEnabled(false);
        cbUpdateDoctorCity.setEnabled(false);
        cbUpdateSpecialization.setEnabled(false);
        txtUserNameUpdate.setEnabled(false);
        txtPasswordUpdate.setEnabled(false);
        txtZipCodeUpdate.setEnabled(false);
        cbRoleUpdate.setEnabled(false);
        txtPasswordUpdate.setEnabled(false);
        
        txtUserNameUpdate.setText(person.getUserName());
        txtPasswordUpdate.setText(person.getPassword());
        cbRoleUpdate.setSelectedItem(person.getRole());
        txtEmailIdUpdate.setText(person.getEmail());
        cbGenderUpdate.setSelectedItem(person.getGender());

        if(person.getRole() == "Doctor"){
            Doctor doctor = system.GetDoctorById(person.getId());
            
            txtFirstNameUpdate.setText(doctor.getfName());
            txtLastNameUpdate.setText(doctor.getlName());
            txtPhoneNo.setText(String.valueOf(doctor.getPhoneNo()));
            txtEmailId.setText(doctor.getEmail());
            cbCityUserUpdate.setSelectedItem(doctor.getCity());
            cbCommunityUserUpdate.setSelectedItem(doctor.getCommunity());
            txtHouseUpdate.setText(doctor.getHouse());
            cbDocUpdateHospital.setSelectedItem(doctor.getHospital().getHospName());
            cbUpdateSpecialization.setSelectedItem(doctor.getSpecialization());
            cbUpdateDoctorCity.setSelectedItem(doctor.getCity());
            
        }
        else if (person.getRole() == "Patient"){
            Patient patient = system.GetPatientById(person.getId());
            
            txtFirstNameUpdate.setText(patient.getfName());
            txtLastNameUpdate.setText(patient.getlName());
            txtPhoneNo.setText(String.valueOf(patient.getPhoneNo()));
            txtEmailId.setText(patient.getEmail());
            cbCityUserUpdate.setSelectedItem(patient.getCity());
            cbCommunityUserUpdate.setSelectedItem(patient.getCommunity());
            txtHouseUpdate.setText(patient.getHouse());
        }
    }//GEN-LAST:event_btnViewPersonActionPerformed

    private void btnEditPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditPersonActionPerformed
        int selectedRow = tblViewPersonData.getSelectedRow();

        if(selectedRow<0){
            JOptionPane.showMessageDialog(this,"Please Select a row to view!");
            return;
        }

        btnUpdatePrsnDet.setVisible(true);

        DefaultTableModel model  = (DefaultTableModel) tblViewPersonData.getModel();
        Person  person = (Person) model.getValueAt(selectedRow, 0);
        
        txtFirstNameUpdate.setEnabled(true);
        txtLastNameUpdate.setEnabled(true);
        txtPhoneNoUpdate.setEnabled(true);
        txtEmailIdUpdate.setEnabled(true);        
        txtAgeUpdate.setEnabled(true);
        cbGenderUpdate.setEnabled(true);
        txtHouseUpdate.setEnabled(true);
        cbCityUserUpdate.setEnabled(true);
        cbCommunityUserUpdate.setEnabled(true);
        cbDocUpdateHospital.setEnabled(true);
        cbUpdateDoctorCity.setEnabled(true);
        cbUpdateSpecialization.setEnabled(true);
        txtUserNameUpdate.setEnabled(true);
        txtPasswordUpdate.setEnabled(true);
        txtZipCodeUpdate.setEnabled(true);
        cbRoleUpdate.setEnabled(true);
        txtPasswordUpdate.setEnabled(true);
        
        txtUserNameUpdate.setText(person.getUserName());
        txtPasswordUpdate.setText(person.getPassword());
        cbRoleUpdate.setSelectedItem(person.getRole());
        txtEmailIdUpdate.setText(person.getEmail());
        cbGenderUpdate.setSelectedItem(person.getGender());

        if(person.getRole() == "Doctor"){
            Doctor doctor = system.GetDoctorById(person.getId());
            
            txtFirstNameUpdate.setText(doctor.getfName());
            txtLastNameUpdate.setText(doctor.getlName());
            txtPhoneNo.setText(String.valueOf(doctor.getPhoneNo()));
            txtEmailId.setText(doctor.getEmail());
            cbCityUserUpdate.setSelectedItem(doctor.getCity());
            cbCommunityUserUpdate.setSelectedItem(doctor.getCommunity());
            txtHouseUpdate.setText(doctor.getHouse());
            cbDocUpdateHospital.setSelectedItem(doctor.getHospital().getHospName());
            cbUpdateSpecialization.setSelectedItem(doctor.getSpecialization());
            cbUpdateDoctorCity.setSelectedItem(doctor.getCity());
        }
        else if (person.getRole() == "Patient"){
            Patient patient = system.GetPatientById(person.getId());
            
            txtFirstNameUpdate.setText(patient.getfName());
            txtLastNameUpdate.setText(patient.getlName());
            txtPhoneNo.setText(String.valueOf(patient.getPhoneNo()));
            txtEmailId.setText(patient.getEmail());
            cbCityUserUpdate.setSelectedItem(patient.getCity());
            cbCommunityUserUpdate.setSelectedItem(patient.getCommunity());
            txtHouseUpdate.setText(patient.getHouse());
        }
    }//GEN-LAST:event_btnEditPersonActionPerformed

    private void btnDeletePersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletePersonActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblViewPersonData.getSelectedRow();

        if(selectedRow<0){
            JOptionPane.showMessageDialog(this,"Please Select a row to delete!");
            return;
        }

        DefaultTableModel model  = (DefaultTableModel) tblViewPersonData.getModel();
        Person person = (Person) model.getValueAt(selectedRow, 0);

        if(person.getRole().equals("Doctor"))
            system.DeleteDoctorById(person.getId());
        else if(person.getRole().equals("Patient"))
            system.DeletePatientById(person.getId());
        
        system.DeletePerson(person);
        
        JOptionPane.showMessageDialog(this,"Person record deleted.");
        getUserTableData();
        
        txtFirstNameUpdate.setText("");
        txtLastNameUpdate.setText("");
        txtAgeUpdate.setText("");
        txtEmailIdUpdate.setText("");
        txtPhoneNoUpdate.setText("");
        txtUserNameUpdate.setText("");
        txtPasswordUpdate.setText("");
        txtZipCodeUpdate.setText("");
    }//GEN-LAST:event_btnDeletePersonActionPerformed

    private void txtFirstNameUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFirstNameUpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstNameUpdateActionPerformed

    private void txtLastNameUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLastNameUpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastNameUpdateActionPerformed

    private void txtEmailIdUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailIdUpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailIdUpdateActionPerformed

    private void txtPhoneNoUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneNoUpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhoneNoUpdateActionPerformed

    private void txtAgeUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeUpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeUpdateActionPerformed

    private void btnUpdatePrsnDetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdatePrsnDetActionPerformed
        // TODO add your handling code here:
          
        boolean flag = true;
        StringBuilder errorString = new StringBuilder();
        int selectedRow = tblViewPersonData.getSelectedRow();
        
        if(txtPasswordUpdate.getText().equals("")){
            errorString.append("Password cannot be blank.\n");
            flag = false;
        }
        if(txtUserNameUpdate.getText().equals("")){
            errorString.append("User Name cannot be blank.\n");
            flag = false;
        }
        if(txtEmailIdUpdate.getText().equals("")){           
            errorString.append("Email cannot be blank.\n");
            flag = false;
        }
        
        String userName = txtUserNameUpdate.getText();
        String password = txtPasswordUpdate.getText();
        String role = cbRoleUpdate.getSelectedItem().toString();
        String email = txtEmailIdUpdate.getText().toString();
        String gender = cbGenderUpdate.getSelectedItem().toString();
        
        //Validations
        if( role == "Patient" || role == "Doctor"){
            if(txtFirstNameUpdate.getText().equals("")){
                errorString.append("First Name field cannot be blank.\n");
                flag = false;
            }
            if(txtLastNameUpdate.getText().equals("")){
                errorString.append("First Name field cannot be blank.\n");
                flag = false;
            }
            if(txtPhoneNoUpdate.getText().equals("")){
                errorString.append("Phone number cannot be blank.\n");
                flag = false;
            }
            else if (txtPhoneNoUpdate.getText().length() < 10){
                errorString.append("Phone number has to be of 10 digits.\n");
                flag = false;            
            }
            if(txtAgeUpdate.getText().equals("")){
                errorString.append("Age cannot be blank.\n");
                flag = false;
            }
        }
        
        if(!flag){
            JOptionPane.showMessageDialog(this,errorString); 
            return;
        }
        
        DefaultTableModel model  = (DefaultTableModel) tblViewPersonData.getModel();
        Person person = (Person) model.getValueAt(selectedRow, 0);
        
        // HOW TO SAVE PERSON KA SHIT ??????????????????????????????????????????
        person.setUserName(userName);
        person.setPassword(password);
        person.setId((system.getPersonList().size() - 1)+1);//person.id
        person.setRole(role);
        person.setEmail(email);
        person.setGender(gender);
      
        //Save Data
        if(role == "Doctor"){
            Doctor doctor = system.GetDoctorById(person.getId());
            Hospital hospital = new Hospital();
            
            hospital.setHospName(cbDocUpdateHospital.getSelectedItem().toString());
            hospital.setCity(cbNewDoctorCity.getSelectedItem().toString());

            doctor.setPersonId(person.getId());
            doctor.setfName(txtFirstNameUpdate.getText());
            doctor.setlName(txtLastNameUpdate.getText());
            doctor.setPhoneNo(Long.parseLong(txtPhoneNoUpdate.getText()));
            doctor.setEmail(txtEmailIdUpdate.getText());
            doctor.setGender(cbGenderUpdate.getSelectedItem().toString());
            doctor.setCity(cbUpdateDoctorCity.getSelectedItem().toString());
            doctor.setCommunity(cbCommunityUserUpdate.getSelectedItem().toString());
            doctor.setHouse(txtHouseUpdate.getText());
            doctor.setHospital(hospital);
            doctor.setSpecialization(cbUpdateSpecialization.getSelectedItem().toString());
        }
        else if (role == "Patient"){
            Patient patient = system.GetPatientById(person.getId());
            
            patient.setPersonId(person.getId());
            patient.setfName(txtFirstNameUpdate.getText());
            patient.setlName(txtLastNameUpdate.getText());
            patient.setPhoneNo(Long.parseLong(txtPhoneNoUpdate.getText()));
            patient.setEmail(txtEmailIdUpdate.getText());
            patient.setCity(cbUpdateDoctorCity.getSelectedItem().toString());
            patient.setCommunity(cbCommunityUserUpdate.getSelectedItem().toString());
            patient.setHouse(txtHouseUpdate.getText());
            patient.setAge(Integer.parseInt(txtAgeUpdate.getText()));
            patient.setZipCode(Integer.parseInt(txtZipCodeUpdate.getText()));
        }
        
        JOptionPane.showMessageDialog(this,"Employee Data Updated Successfully"); 
        
        txtFirstNameUpdate.setText("");
        txtLastNameUpdate.setText("");
        txtAgeUpdate.setText("");
        txtEmailIdUpdate.setText("");
        txtPhoneNoUpdate.setText("");
        txtAgeUpdate.setText("");
        txtUserNameUpdate.setText("");
        txtPasswordUpdate.setText("");
        txtZipCodeUpdate.setText("");
    }//GEN-LAST:event_btnUpdatePrsnDetActionPerformed

    private void btnNewUserSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewUserSubmitActionPerformed
        // TODO add your handling code here:
        
        boolean flag = true;
        StringBuilder errorString = new StringBuilder();
        
        if(txtNewPassword.getText().equals("")){
            errorString.append("Password cannot be blank.\n");
            flag = false;
        }
        if(txtNewUserName.getText().equals("")){
            errorString.append("User Name cannot be blank.\n");
            flag = false;
        }
        if(txtEmailId.getText().equals("")){           
            errorString.append("Email cannot be blank.\n");
            flag = false;
        }
        
        String userName = txtNewUserName.getText();
        String password = txtNewPassword.getText();
        String role = cbRole.getSelectedItem().toString();
        String email = txtEmailId.getText().toString();
        String gender = cbGender.getSelectedItem().toString();
        
        //Validations
        if( role == "Patient" || role == "Doctor"){
            if(txtFirstName.getText().equals("")){
                errorString.append("First Name field cannot be blank.\n");
                flag = false;
            }
            if(txtLastName.getText().equals("")){
                errorString.append("First Name field cannot be blank.\n");
                flag = false;
            }
            if(txtPhoneNo.getText().equals("")){
                errorString.append("Phone number cannot be blank.\n");
                flag = false;
            }
            else if (txtPhoneNo.getText().length() < 10){
                errorString.append("Phone number has to be of 10 digits.\n");
                flag = false;            
            }
            if(txtAge.getText().equals("")){
                errorString.append("Age cannot be blank.\n");
                flag = false;
            }
        }
        
        if(!flag){
            JOptionPane.showMessageDialog(this,errorString); 
            return;
        }
        
        Person person = system.AddNewPerson();
        
        person.setUserName(userName);
        person.setPassword(password);
        person.setId((system.getPersonList().size() - 1)+1);
        person.setRole(role);
        person.setEmail(email);
        person.setGender(gender);
        
        //Save Data
        if(role == "Doctor"){
            Doctor doctor = system.AddNewDoctor();
            Hospital hospital = new Hospital();
            
            hospital.setHospName(cbNewUserHospital.getSelectedItem().toString());
            hospital.setCity(cbNewDoctorCity.getSelectedItem().toString());
            
            doctor.setPersonId(person.getId());
            doctor.setfName(txtFirstName.getText());
            doctor.setlName(txtLastName.getText());
            doctor.setPhoneNo(Long.parseLong(txtPhoneNo.getText()));
            doctor.setEmail(txtEmailId.getText());
            doctor.setCity(cbNewUserCity.getSelectedItem().toString());
            doctor.setCommunity(cbNewUserCommunity.getSelectedItem().toString());
            doctor.setHouse(cbNewUserHouse.getSelectedItem().toString());
            doctor.setHospital(hospital);
            doctor.setSpecialization(cbNewUserSpecialization.getSelectedItem().toString());
        }
        else if (role == "Patient"){
            Patient patient = system.AddNewPatient();
            //City city = new City();
            
            patient.setPersonId(person.getId());
            patient.setfName(txtFirstName.getText());
            patient.setlName(txtLastName.getText());
            patient.setPhoneNo(Long.parseLong(txtPhoneNo.getText()));
            patient.setEmail(txtEmailId.getText());
            patient.setCity(cbNewUserCity.getSelectedItem().toString());
            patient.setCommunity(cbNewUserCommunity.getSelectedItem().toString());
            patient.setHouse(cbNewUserHouse.getSelectedItem().toString());
            patient.setAge(Integer.parseInt(txtAge.getText()));
            patient.setZipCode(Integer.parseInt(txtZipCode.getText()));
            patient.setAge(Integer.parseInt(txtAge.getText()));
        }
        
        JOptionPane.showMessageDialog(this,"Employee Data Saved Successfully"); 
        
        txtFirstName.setText("");
        txtLastName.setText("");
        txtAge.setText("");
        txtEmailId.setText("");
        txtPhoneNo.setText("");
        txtAge.setText("");
        txtNewUserName.setText("");
        txtNewPassword.setText("");
        txtZipCode.setText("");
    }//GEN-LAST:event_btnNewUserSubmitActionPerformed

    private void txtNewUserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNewUserNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNewUserNameActionPerformed

    private void txtLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastNameActionPerformed

    private void txtFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstNameActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        NewUserJPanel.setVisible(false);
        LoginJPanel.setVisible(false);
        WelcomeJPanel.setVisible(true);
        NewLocationJPanel.setVisible(false);
        ViewEditLocationJPanel.setVisible(false);
        ViewEditUserJPanel.setVisible(false);
        NewUserJPanel.resetKeyboardActions();
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed

    private void txtPhoneNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhoneNoActionPerformed

    private void txtEmailIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailIdActionPerformed

    private void txtZipCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtZipCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtZipCodeActionPerformed

    private void cbNewUserSpecializationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNewUserSpecializationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbNewUserSpecializationActionPerformed

    private void cbNewUserHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNewUserHospitalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbNewUserHospitalActionPerformed

    private void cbRoleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbRoleItemStateChanged
        // TODO add your handling code here:
        
        lblDoctorDetails.setVisible(false);
        lblNewUserSpecialization.setVisible(false);
        cbNewUserSpecialization.setVisible(false);
        lblNewUserHospital.setVisible(false);
        cbNewUserHospital.setVisible(false);
        NewDoctorSubPanel.setVisible(false);
        
        if(evt.getStateChange() == ItemEvent.SELECTED){
            String role = cbRole.getSelectedItem().toString();
            
            if(role == "Doctor") {
                lblDoctorDetails.setVisible(true);
                lblNewUserSpecialization.setVisible(true);
                cbNewUserSpecialization.setVisible(true);
                lblNewUserHospital.setVisible(true);
                cbNewUserHospital.setVisible(true);
                NewDoctorSubPanel.setVisible(true);
            }
        }
    }//GEN-LAST:event_cbRoleItemStateChanged

    private void txtHouseUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHouseUpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHouseUpdateActionPerformed

    private void btnViewEditBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewEditBackActionPerformed
        // TODO add your handling code here:
        NewUserJPanel.setVisible(false);
        LoginJPanel.setVisible(false);
        WelcomeJPanel.setVisible(true);
        NewLocationJPanel.setVisible(false);
        ViewEditLocationJPanel.setVisible(false);
        ViewEditUserJPanel.setVisible(false);
        ViewEditUserJPanel.repaint();
    }//GEN-LAST:event_btnViewEditBackActionPerformed

    private void txtUserNameUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserNameUpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserNameUpdateActionPerformed

    private void txtZipCodeUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtZipCodeUpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtZipCodeUpdateActionPerformed

    private void cbNewDoctorCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNewDoctorCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbNewDoctorCityActionPerformed

    private void btnAddNewLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewLocationActionPerformed
        // TODO add your handling code here:
        NewUserJPanel.setVisible(false);
        LoginJPanel.setVisible(false);
        WelcomeJPanel.setVisible(false);
        NewLocationJPanel.setVisible(true);
        ViewEditLocationJPanel.setVisible(false);
        ViewEditUserJPanel.setVisible(false);
        AddNewEncounterPanel.setVisible(false);
        
        for(City city : system.getCityList()){
            cbNewHospCity.addItem(city.getCityName());
            cbNewHouseCity.addItem(city.getCityName());
        }
        
        for(Community community : system.getCommunityList()){
            cbNewHospCommunity.addItem(community.getCommunityName());
            cbNewHouseCommunity.addItem(community.getCommunityName());
        }
    }//GEN-LAST:event_btnAddNewLocationActionPerformed

    private void btnViewEditLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewEditLocationActionPerformed
        // TODO add your handling code here:
        NewUserJPanel.setVisible(false);
        LoginJPanel.setVisible(false);
        WelcomeJPanel.setVisible(false);
        NewLocationJPanel.setVisible(false);
        ViewEditLocationJPanel.setVisible(true);
        ViewEditUserJPanel.setVisible(false);
        AddNewEncounterPanel.setVisible(false);        
        for(City city : system.getCityList())
            cbCityHouseHospUpdate.addItem(city.getCityName());
        
        for(Community community : system.getCommunityList())
            cbCommHouseHospUpdate.addItem(community.getCommunityName());
       
        pupolateLocationTables();
    }//GEN-LAST:event_btnViewEditLocationActionPerformed

    private void cbCityUserUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCityUserUpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbCityUserUpdateActionPerformed

    private void btnNewLocationBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewLocationBackActionPerformed
        // TODO add your handling code here:
        NewUserJPanel.setVisible(false);
        LoginJPanel.setVisible(false);
        WelcomeJPanel.setVisible(true);
        NewLocationJPanel.setVisible(false);
        ViewEditLocationJPanel.setVisible(false);
        ViewEditUserJPanel.setVisible(false);
        ViewEditUserJPanel.repaint();
    }//GEN-LAST:event_btnNewLocationBackActionPerformed

    private void btnSaveNewHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveNewHospitalActionPerformed
        // TODO add your handling code here:
        if(txtNewHospital.equals(""))
            JOptionPane.showMessageDialog(this, "Please enter a Hospital name.");
        else{
            String hospitalName = new String();
            City city = new City();
            Community comm = new Community();
            
            hospitalName = txtNewHospital.getText();
            city.setCityName(cbNewHospCity.getSelectedItem().toString());
            comm.setCommunityName(cbNewHospCommunity.getSelectedItem().toString());
            
            system.AddNewHospital(hospitalName, comm, city);
            JOptionPane.showMessageDialog(this, "BOOM. City has been saved.");
            txtNewHospital.setText("");
        }    
    }//GEN-LAST:event_btnSaveNewHospitalActionPerformed

    private void btnSaveNewCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveNewCityActionPerformed
        // TODO add your handling code here:
        if(txtNewCity.equals(""))
            JOptionPane.showMessageDialog(this, "Please enter a City name.");
        else{
            City city = system.AddNewCity();
            city.setCityName(txtNewCity.getText());
            JOptionPane.showMessageDialog(this, "BOOM. City has been saved.");
            txtNewCity.setText("");
        }
    }//GEN-LAST:event_btnSaveNewCityActionPerformed

    private void btnSaveNewCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveNewCommunityActionPerformed
        // TODO add your handling code here:
        if(txtNewCommunity.equals(""))
            JOptionPane.showMessageDialog(this, "Please enter a Community name.");
        else{
            Community community = system.AddNewCommunity();
            community.setCommunityName(txtNewCommunity.getText());
            JOptionPane.showMessageDialog(this, "BOOM. Coommunity has been saved.");
            txtNewCommunity.setText("");
        }
    }//GEN-LAST:event_btnSaveNewCommunityActionPerformed

    private void btnSaveNewHouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveNewHouseActionPerformed
        // TODO add your handling code here:
        if(txtNewHouse.equals(""))
            JOptionPane.showMessageDialog(this, "Please enter a House name.");
        else{
            String house = new String();
            City city = new City();
            Community comm = new Community();
            
            house = txtNewHouse.getText();
            city.setCityName(cbNewHouseCity.getSelectedItem().toString());
            comm.setCommunityName(cbNewHouseCommunity.getSelectedItem().toString());
            
            system.AddNewHouse(house, comm, city);
            JOptionPane.showMessageDialog(this, "BOOM. House has been saved.");
            txtNewHouse.setText("");
        }
    }//GEN-LAST:event_btnSaveNewHouseActionPerformed

    private void cbNewHospCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNewHospCommunityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbNewHospCommunityActionPerformed

    private void cbNewHospCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNewHospCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbNewHospCityActionPerformed

    private void btnEditHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditHospitalActionPerformed
        // TODO add your handling code here:
        int hospitalRow = tblHospital.getSelectedRow();
        
        btnSubmitCityCommunity.setVisible(false);
        btnUpdateHouseHosp.setVisible(true);
        
        cbCityHouseHospUpdate.setEnabled(true);
        cbCommHouseHospUpdate.setEnabled(true);
        txtViewEditHospitalName.setEnabled(true);
        txtViewEditHouseName.setEnabled(false);
        
        if(hospitalRow < 0) {
            JOptionPane.showMessageDialog(this,"Please Select a row!");
            return;
        }
            
        DefaultTableModel model  = (DefaultTableModel) tblHospital.getModel();
        Hospital hosp = (Hospital) model.getValueAt(hospitalRow, 0);
            
        cbCityHouseHospUpdate.setSelectedItem(hosp.getCity().getCityName());
        cbCommHouseHospUpdate.setSelectedItem(hosp.getCommunity().getCommunityName());
        txtViewEditHospitalName.setText(hosp.getHospName());
        txtViewEditHouseName.setText("");
    }//GEN-LAST:event_btnEditHospitalActionPerformed

    private void btnBackViewEditLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackViewEditLocActionPerformed
        // TODO add your handling code here:
        NewUserJPanel.setVisible(false);
        LoginJPanel.setVisible(false);
        WelcomeJPanel.setVisible(true);
        NewLocationJPanel.setVisible(false);
        ViewEditLocationJPanel.setVisible(false);
        ViewEditUserJPanel.setVisible(false);
        ViewEditUserJPanel.repaint();
    }//GEN-LAST:event_btnBackViewEditLocActionPerformed

    private void btnEditCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditCityActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCity.getSelectedRow();

        if(selectedRow<0){
            JOptionPane.showMessageDialog(this,"Please Select a row!");
            return;
        }
        
        btnSubmitCityCommunity.setVisible(true);
        txtViewEditCommunityName.setEnabled(false);
        txtViewEditCityName.setEnabled(true);

        DefaultTableModel model  = (DefaultTableModel) tblCity.getModel();
        City  city = (City) model.getValueAt(selectedRow, 0);

        txtViewEditCityName.setText(city.getCityName());

//        for(City item : system.getCityList()){
//            if(item.getCityName().equals(input)){
//                JOptionPane.showMessageDialog(this, "City already added.");
//                return;
//            }
//        }
//        
//        city.setCityName(input);
//        JOptionPane.showMessageDialog(this, "City updated");
    }//GEN-LAST:event_btnEditCityActionPerformed

    private void btnEditCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditCommunityActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCommmunity.getSelectedRow();

        if(selectedRow<0){
            JOptionPane.showMessageDialog(this,"Please Select a row!");
            return;
        }
        
        btnSubmitCityCommunity.setVisible(true);
        txtViewEditCommunityName.setEnabled(true);
        txtViewEditCityName.setEnabled(false);

        DefaultTableModel model  = (DefaultTableModel) tblCommmunity.getModel();
        Community  com = (Community) model.getValueAt(selectedRow, 0);

        txtViewEditCommunityName.setText(com.getCommunityName());
    }//GEN-LAST:event_btnEditCommunityActionPerformed

    private void btnSubmitCityCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitCityCommunityActionPerformed
        // TODO add your handling code here:

        int cityRow = tblCity.getSelectedRow();
        int comRow = tblCommmunity.getSelectedRow();

        if(cityRow < 0 && comRow < 0) {
            JOptionPane.showMessageDialog(this,"Please Select a row!");
            return;
        }
        else if(cityRow > 0){
            btnSubmitCityCommunity.setVisible(true);
            btnUpdateHouseHosp.setVisible(false);
            txtViewEditCommunityName.setEnabled(false);
            txtViewEditCityName.setEnabled(true);
        
            DefaultTableModel model  = (DefaultTableModel) tblCity.getModel();
            City city = (City) model.getValueAt(cityRow, 0);

            String input = txtViewEditCityName.getText();
        
            if(input.equals("")){
                    JOptionPane.showMessageDialog(this, "City cannot be blank!");
                    return;
            }
                
            for(City item : system.getCityList()){
                if(item.getCityName().equals(input)){
                    JOptionPane.showMessageDialog(this, "City already added!");
                    return;
                }
            }
        
            city.setCityName(input);
            JOptionPane.showMessageDialog(this, "City updated.");
        }
        else if(comRow >0){
            btnSubmitCityCommunity.setVisible(true);
            btnUpdateHouseHosp.setVisible(false);
            txtViewEditCommunityName.setEnabled(true);
            txtViewEditCityName.setEnabled(false);

            DefaultTableModel model  = (DefaultTableModel) tblCommmunity.getModel();
            Community  com = (Community) model.getValueAt(comRow, 0);

            String input = txtViewEditCommunityName.getText();
        
            if(input.equals("")){
                JOptionPane.showMessageDialog(this, "Community cannot be blank!");
                return;
            }
            
            for(Community item : system.getCommunityList()){
                if(item.getCommunityName().equals(input)){
                    JOptionPane.showMessageDialog(this, "Community already added.");
                    return;
                }
            }
        
            com.setCommunityName(input);
            JOptionPane.showMessageDialog(this, "Community updated");
        }
        
        pupolateLocationTables();
        txtViewEditCommunityName.setText("");
        txtViewEditCityName.setText("");
    }//GEN-LAST:event_btnSubmitCityCommunityActionPerformed

    private void btnViewHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewHospitalActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblHospital.getSelectedRow();
        
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(this,"Please Select a row!");
            return;
        }
        
        btnSubmitCityCommunity.setVisible(false);
        btnUpdateHouseHosp.setVisible(false);
        
        cbCityHouseHospUpdate.setEnabled(false);
        cbCommHouseHospUpdate.setEnabled(false);
        txtViewEditHospitalName.setEnabled(false);
        txtViewEditHouseName.setEnabled(false);
        
        DefaultTableModel model  = (DefaultTableModel) tblHospital.getModel();
        Hospital hosp = (Hospital) model.getValueAt(selectedRow, 0);

        cbCityHouseHospUpdate.setSelectedItem(hosp.getCity().getCityName());
        cbCommHouseHospUpdate.setSelectedItem(hosp.getCommunity().getCommunityName());
        txtViewEditHospitalName.setText(hosp.getHospName());
        txtViewEditHouseName.setText("");
    }//GEN-LAST:event_btnViewHospitalActionPerformed

    private void btnUpdateHouseHospActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateHouseHospActionPerformed
        // TODO add your handling code here:
        
        int houseRow = tblHouse.getSelectedRow();
        int hospitalRow = tblHospital.getSelectedRow();
        
        btnSubmitCityCommunity.setVisible(false);
        btnUpdateHouseHosp.setVisible(true);
        
        cbCityHouseHospUpdate.setEnabled(true);
        cbCommHouseHospUpdate.setEnabled(true);
        
        if(houseRow < 0 && hospitalRow < 0) {
            JOptionPane.showMessageDialog(this,"Please Select a row!");
            return;
        }
        else if(txtViewEditHospitalName.getText().equals("")){
            txtViewEditHouseName.setEnabled(true);
            txtViewEditHospitalName.setEnabled(false);
            
            DefaultTableModel model  = (DefaultTableModel) tblHouse.getModel();
            House house = (House) model.getValueAt(houseRow, 0);
            
//            cbCityHouseHospUpdate.setSelectedItem(house.getCity());
//            cbCommHouseHospUpdate.setSelectedItem(house.getCommunity());
//            txtViewEditHouseName.setText(house.getHouseName());
            
            for(House item : system.getHouseList()){
                if(item.getCity().equals(cbCityHouseHospUpdate.getSelectedItem().toString()) && item.getCommunity().equals(cbCommHouseHospUpdate.getSelectedItem().toString()) && item.getHouseName().equals(txtViewEditHouseName.getText())){
                    JOptionPane.showMessageDialog(this, "House already added.");
                    return;
                }
            }
            
            house.setCity(cbCityHouseHospUpdate.getSelectedItem().toString());
            house.setCommunity(cbCommHouseHospUpdate.getSelectedItem().toString());
            house.setHouseName(txtViewEditHouseName.getText());
            
            JOptionPane.showMessageDialog(this, "House updated");
            txtViewEditHouseName.setText("");
        }
        else if(txtViewEditHouseName.getText().equals("")){
            txtViewEditHouseName.setEnabled(false);
            txtViewEditHospitalName.setEnabled(true);
            
            DefaultTableModel model  = (DefaultTableModel) tblHospital.getModel();
            Hospital hosp = (Hospital) model.getValueAt(hospitalRow, 0);
            
//            cbCityHouseHospUpdate.setSelectedItem(hosp.getCity());
//            cbCommHouseHospUpdate.setSelectedItem(hosp.getCommunity());
//            txtViewEditHospitalName.setText(hosp.getHospName());
            
            for(House item : system.getHouseList()){
                if(item.getCity().equals(cbCityHouseHospUpdate.getSelectedItem().toString()) && item.getCommunity().equals(cbCommHouseHospUpdate.getSelectedItem().toString()) && item.getHouseName().equals(txtViewEditHospitalName.getText())){
                    JOptionPane.showMessageDialog(this, "Hospital already added.");
                    return;
                }
            }
            
            hosp.setCity(cbCityHouseHospUpdate.getSelectedItem().toString());
            hosp.setCommunity(cbCommHouseHospUpdate.getSelectedItem().toString());
            hosp.setHospName(txtViewEditHospitalName.getText());
            
            JOptionPane.showMessageDialog(this, "Hospital updated");
            txtViewEditHospitalName.setText("");
        }
        pupolateLocationTables();
    }//GEN-LAST:event_btnUpdateHouseHospActionPerformed

    private void btnEditHouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditHouseActionPerformed
        // TODO add your handling code here:
        int houseRow = tblHouse.getSelectedRow();
        
        btnSubmitCityCommunity.setVisible(false);
        btnUpdateHouseHosp.setVisible(true);
        
        cbCityHouseHospUpdate.setEnabled(true);
        cbCommHouseHospUpdate.setEnabled(true);
        txtViewEditHospitalName.setEnabled(false);
        txtViewEditHouseName.setEnabled(true);
        
        if(houseRow < 0) {
            JOptionPane.showMessageDialog(this,"Please Select a row!");
            return;
        }
            
        DefaultTableModel model  = (DefaultTableModel) tblHouse.getModel();
        House house = (House) model.getValueAt(houseRow, 0);
            
        cbCityHouseHospUpdate.setSelectedItem(house.getCity());
        cbCommHouseHospUpdate.setSelectedItem(house.getCommunity());
        txtViewEditHospitalName.setText("");
        txtViewEditHouseName.setText(house.getHouseName());
    }//GEN-LAST:event_btnEditHouseActionPerformed

    private void btnViewHouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewHouseActionPerformed
        // TODO add your handling code here:
        
        int houseRow = tblHouse.getSelectedRow();
        
        btnSubmitCityCommunity.setVisible(false);
        btnUpdateHouseHosp.setVisible(true);
        
        cbCityHouseHospUpdate.setEnabled(false);
        cbCommHouseHospUpdate.setEnabled(false);
        txtViewEditHospitalName.setEnabled(false);
        txtViewEditHouseName.setEnabled(false);
        
        if(houseRow < 0) {
            JOptionPane.showMessageDialog(this,"Please Select a row!");
            return;
        }
            
        DefaultTableModel model  = (DefaultTableModel) tblHouse.getModel();
        House house = (House) model.getValueAt(houseRow, 0);
            
        cbCityHouseHospUpdate.setSelectedItem(house.getCity());
        cbCommHouseHospUpdate.setSelectedItem(house.getCommunity());
        txtViewEditHospitalName.setText("");
        txtViewEditHouseName.setText(house.getHouseName());
    }//GEN-LAST:event_btnViewHouseActionPerformed

    private void btnAddNewEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewEncounterActionPerformed
        // TODO add your handling code here:
        NewUserJPanel.setVisible(false);
        LoginJPanel.setVisible(false);
        WelcomeJPanel.setVisible(false);
        NewLocationJPanel.setVisible(false);
        ViewEditLocationJPanel.setVisible(false);
        ViewEditUserJPanel.setVisible(false);
        AddNewEncounterPanel.setVisible(true);
        
        for(City city : system.getCityList()){
            cbNewEncounterCity.addItem(city.getCityName());
        }
        
        for(Community community : system.getCommunityList())
            cbNewEncounterCommunity.addItem(community.getCommunityName());
    }//GEN-LAST:event_btnAddNewEncounterActionPerformed

    private void cbNewEncounterCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNewEncounterCommunityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbNewEncounterCommunityActionPerformed

    private void cbNewDoctorEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNewDoctorEncounterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbNewDoctorEncounterActionPerformed

    private void btnSubmitNewEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitNewEncounterActionPerformed
        // TODO add your handling code here:
        String patientnm = txtNewEncounterPatient.getText();
        String doctornm = cbNewDoctorEncounter.getSelectedItem().toString();
        String citynm = cbNewEncounterCity.getSelectedItem().toString();
        String communitynm = cbNewEncounterCommunity.getSelectedItem().toString();
        String hospitalnm = cbNewHospitalEncounter.getSelectedItem().toString();
        Date appointment = dtNewAppointment.getDate();
        
        Patient pat = new Patient();
        String fullName;
        boolean flag = false;
        
        for(Patient patient : system.getPatientList().getPatientList()){
            fullName = patient.getfName() + " " + patient.getlName();
            
            if(fullName.equals(patientnm)){
                flag = true;
                pat = patient;
            }
        }
        
        if(!flag)
            JOptionPane.showMessageDialog(this, "This patient does not exists.");
        else{
            Encounter enc = system.AddNewEncounter();
            
            for(Doctor doc : system.getDoctorList()){
                if(doc.getDoctorName().equals(doctornm)){
                    enc.setDoctor(doc);
                }                
            }           
            
            enc.setPatient(pat);
            enc.setAppointment(appointment);
        }
    }//GEN-LAST:event_btnSubmitNewEncounterActionPerformed

    private void cbNewEncounterCommunityItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbNewEncounterCommunityItemStateChanged

        if(cbNewEncounterCommunity.getItemCount() != 0){
            String city = cbNewEncounterCity.getSelectedItem().toString();
            String community = cbNewEncounterCommunity.getSelectedItem().toString();
            cbNewHospitalEncounter.removeAllItems();
            //cbNewDoctorEncounter.removeAllItems();
            
            for(Hospital hospital : system.getHospitalList().getHospitalList()){
                if(hospital.getCity().getCityName().equals(city) && hospital.getCommunity().getCommunityName().equals(community)){
                   cbNewHospitalEncounter.addItem(hospital.getHospName());
            }
        }        
        }
    }//GEN-LAST:event_cbNewEncounterCommunityItemStateChanged

    private void cbNewDoctorEncounterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbNewDoctorEncounterItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cbNewDoctorEncounterItemStateChanged

    private void cbNewHospitalEncounterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbNewHospitalEncounterItemStateChanged
        // TODO add your handling code here:
        String city = cbNewEncounterCity.getSelectedItem().toString();
        String community = cbNewEncounterCommunity.getSelectedItem().toString();
        
        if(cbNewHospitalEncounter.getItemCount() != 0){
            String hospital = cbNewHospitalEncounter.getSelectedItem().toString();
        
            cbNewDoctorEncounter.removeAllItems();
            
        for(Doctor doc : system.getDoctorList()){
            if(doc.getCity().equals(city) && doc.getCommunity().equals(community) && doc.getHospital().getHospName().contains(hospital))
                cbNewDoctorEncounter.addItem(doc.getDoctorName());
            }
        }
    }//GEN-LAST:event_cbNewHospitalEncounterItemStateChanged

    private void btnBackNewEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackNewEncounterActionPerformed
        // TODO add your handling code here:
        NewUserJPanel.setVisible(false);
        LoginJPanel.setVisible(false);
        WelcomeJPanel.setVisible(true);
        NewLocationJPanel.setVisible(false);
        ViewEditLocationJPanel.setVisible(false);
        ViewEditUserJPanel.setVisible(false);
        AddNewEncounterPanel.setVisible(false);
    }//GEN-LAST:event_btnBackNewEncounterActionPerformed

    private void cbNewEncounterCityItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbNewEncounterCityItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cbNewEncounterCityItemStateChanged

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
        txtUserName.setText("");
        pwdLoginPassword.setText("");
        
        NewUserJPanel.setVisible(false);
        LoginJPanel.setVisible(true);
        WelcomeJPanel.setVisible(false);
        NewLocationJPanel.setVisible(false);
        ViewEditLocationJPanel.setVisible(false);
        ViewEditUserJPanel.setVisible(false);
        AddNewEncounterPanel.setVisible(false);
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void btnViewEditEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewEditEncounterActionPerformed
        // TODO add your handling code here:
        NewUserJPanel.setVisible(false);
        LoginJPanel.setVisible(false);
        WelcomeJPanel.setVisible(false);
        NewLocationJPanel.setVisible(false);
        ViewEditLocationJPanel.setVisible(false);
        ViewEditUserJPanel.setVisible(false);
        AddNewEncounterPanel.setVisible(false);
        EditEncounterPanel.setVisible(true);
    
        for(City city : system.getCityList())
            cbNewEncounterCity1.addItem(city.getCityName());
        
        for(Community community : system.getCommunityList())
            cbNewEncounterCommunity1.addItem(community.getCommunityName());
    }//GEN-LAST:event_btnViewEditEncounterActionPerformed

    private void btnBackEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackEncounterActionPerformed
        // TODO add your handling code here:
        NewUserJPanel.setVisible(false);
        LoginJPanel.setVisible(false);
        WelcomeJPanel.setVisible(true);
        NewLocationJPanel.setVisible(false);
        ViewEditLocationJPanel.setVisible(false);
        ViewEditUserJPanel.setVisible(false);
        AddNewEncounterPanel.setVisible(false);
        EditEncounterPanel.setVisible(false);
    }//GEN-LAST:event_btnBackEncounterActionPerformed

    private void cbNewEncounterCity1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbNewEncounterCity1ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cbNewEncounterCity1ItemStateChanged

    private void cbNewHospitalEncounter1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbNewHospitalEncounter1ItemStateChanged
        // TODO add your handling code here:
        
        String city = cbNewEncounterCity1.getSelectedItem().toString();
        String community = cbNewEncounterCommunity1.getSelectedItem().toString();
        
        if(cbNewHospitalEncounter1.getItemCount() != 0){
            String hospital = cbNewHospitalEncounter1.getSelectedItem().toString();
        
            cbNewDoctorEncounter1.removeAllItems();
            
        for(Doctor doc : system.getDoctorList()){
            if(doc.getCity().equals(city) && doc.getCommunity().equals(community) && doc.getHospital().getHospName().contains(hospital))
                cbNewDoctorEncounter1.addItem(doc.getDoctorName());
            }
        }
    }//GEN-LAST:event_cbNewHospitalEncounter1ItemStateChanged

    private void cbNewEncounterCommunity1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbNewEncounterCommunity1ItemStateChanged
        // TODO add your handling code here:
            if(cbNewEncounterCommunity1.getItemCount() != 0){
            String city = cbNewEncounterCity1.getSelectedItem().toString();
            String community = cbNewEncounterCommunity1.getSelectedItem().toString();
            cbNewHospitalEncounter1.removeAllItems();
            
            for(Hospital hospital : system.getHospitalList().getHospitalList()){
                if(hospital.getCity().getCityName().equals(city) && hospital.getCommunity().getCommunityName().equals(community)){
                   cbNewHospitalEncounter1.addItem(hospital.getHospName());
            }
        }        
        }
    }//GEN-LAST:event_cbNewEncounterCommunity1ItemStateChanged

    private void cbNewEncounterCommunity1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNewEncounterCommunity1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbNewEncounterCommunity1ActionPerformed

    private void cbNewDoctorEncounter1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbNewDoctorEncounter1ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cbNewDoctorEncounter1ItemStateChanged

    private void cbNewDoctorEncounter1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNewDoctorEncounter1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbNewDoctorEncounter1ActionPerformed

    private void btnSubmitNewEncounter1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitNewEncounter1ActionPerformed
        // TODO add your handling code here:
        String patientnm = txtNewEncounterPatient1.getText();
        String doctornm = cbNewDoctorEncounter1.getSelectedItem().toString();
        String citynm = cbNewEncounterCity1.getSelectedItem().toString();
        String communitynm = cbNewEncounterCommunity1.getSelectedItem().toString();
        String hospitalnm = cbNewHospitalEncounter1.getSelectedItem().toString();
        Date appointment = dtNewAppointment1.getDate();
        
        Patient pat = new Patient();
        String fullName;
        boolean flag = false;
        
        for(Patient patient : system.getPatientList().getPatientList()){
            fullName = patient.getfName() + " " + patient.getlName();
            
            if(fullName.equals(patientnm)){
                flag = true;
                pat = patient;
            }
        }
        
        if(!flag)
            JOptionPane.showMessageDialog(this, "The patient does not exists or the field is blank.");
        else{
            Encounter enc = system.AddNewEncounter();
            
            for(Doctor doc : system.getDoctorList()){
                if(doc.getDoctorName().equals(doctornm)){
                    enc.setDoctor(doc);
                }                
            }           
            
            enc.setPatient(pat);
            enc.setAppointment(appointment);

            VitalSigns vital =  enc.getVitalSigns();
           
            if (txtBPedit.getText().equals("")||
                txtTempEdit.getText().equals("")||
                txtHeight.getText().equals("")||
                txtWeight.getText().equals("")||
                txtPulseRate.getText().equals("")||
                txtComment.getText().equals("")){ 
                JOptionPane.showMessageDialog(this, "Vital Sign fields cannot be blank");
                return;
            }
            
                vital.setBloodPres(txtBPedit.getText());
                vital.setTemp(Integer.parseInt(txtTempEdit.getText()));
                vital.setHeight(Integer.parseInt(txtHeight.getText()));
                vital.setWeight(Integer.parseInt(txtWeight.getText()));
                vital.setPulseRate(txtPulseRate.getText());
                vital.setComments(txtComment.getText());
                enc.setVitalSigns(vital);
            }
    }//GEN-LAST:event_btnSubmitNewEncounter1ActionPerformed

    private void btnSearchPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchPatientActionPerformed
        // TODO add your handling code here:
        
        String patient = txtSearchPatient.getText();
        ArrayList<Encounter> eLst = new ArrayList<Encounter>();
                    
        if(patient.equals(""))
            JOptionPane.showMessageDialog(this, "The field cannot be blank.");
        else{
            for(Encounter enc : system.getEncounterList().getEncounterHist()){
                String patientnm = enc.getPatient().getfName() + " " + enc.getPatient().getfName();
                if(patientnm.equals(patient))
                    eLst.add(enc);
            }
            
            populateEncounterTable(eLst);
        }        
    }//GEN-LAST:event_btnSearchPatientActionPerformed

    private void cbNewEncounterCity1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNewEncounterCity1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbNewEncounterCity1ActionPerformed

    private void btnViewEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewEncounterActionPerformed

        // TODO add your handling code here:
        
        int selectedRow = tblEncounter.getSelectedRow();

        if(selectedRow<0){
            JOptionPane.showMessageDialog(this,"Please Select a row to view!");
            return;
        }

        btnSubmitNewEncounter1.setVisible(false);

        DefaultTableModel model  = (DefaultTableModel) tblEncounter.getModel();
        Encounter  e = (Encounter) model.getValueAt(selectedRow, 0);

        cbNewEncounterCity1.setSelectedItem(e.getDoctor().getHospital().getCity());
        cbNewEncounterCommunity1.setSelectedItem(e.getDoctor().getHospital().getCommunity());
        cbNewHospitalEncounter1.setSelectedItem(e.getDoctor().getHospital().getHospName());
        cbNewDoctorEncounter1.setSelectedItem(e.getDoctor().getDoctorName());
        dtNewAppointment1.setDate(e.getAppointment());
        txtNewEncounterPatient1.setText(e.getPatient().getfName() + " " + e.getPatient().getlName());
        
        //Vital signs
        
        txtBPedit.setText(e.getVitalSigns().getBloodPres());
        txtTempEdit.setText(String.valueOf(e.getVitalSigns().getTemp()));
        txtHeight.setText(String.valueOf(e.getVitalSigns().getHeight()));
        txtWeight.setText(String.valueOf(e.getVitalSigns().getWeight()));
        txtPulseRate.setText(e.getVitalSigns().getPulseRate());
        txtComment.setText(e.getVitalSigns().getComments());
        
        cbNewEncounterCity1.setEnabled(false);
        cbNewEncounterCommunity1.setEnabled(false);
        cbNewHospitalEncounter1.setEnabled(false);
        cbNewDoctorEncounter1.setEnabled(false);
        dtNewAppointment1.setEnabled(false);
        txtNewEncounterPatient1.setEnabled(false);
        txtBPedit.setEnabled(false);
        txtTempEdit.setEnabled(false);
        txtHeight.setEnabled(false);
        txtWeight.setEnabled(false);
        txtPulseRate.setEnabled(false);
        txtComment.setEnabled(false);
    }//GEN-LAST:event_btnViewEncounterActionPerformed

    private void btnEditEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditEncounterActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = tblEncounter.getSelectedRow();

        if(selectedRow<0){
            JOptionPane.showMessageDialog(this,"Please Select a row to view!");
            return;
        }

        btnSubmitNewEncounter1.setVisible(false);

        DefaultTableModel model  = (DefaultTableModel) tblEncounter.getModel();
        Encounter  e = (Encounter) model.getValueAt(selectedRow, 0);

        cbNewEncounterCity1.setSelectedItem(e.getDoctor().getHospital().getCity());
        cbNewEncounterCommunity1.setSelectedItem(e.getDoctor().getHospital().getCommunity());
        cbNewHospitalEncounter1.setSelectedItem(e.getDoctor().getHospital().getHospName());
        cbNewDoctorEncounter1.setSelectedItem(e.getDoctor().getDoctorName());
        dtNewAppointment1.setDate(e.getAppointment());
        txtNewEncounterPatient1.setText(e.getPatient().getfName() + " " + e.getPatient().getlName());
        
        //Vital signs
        
        txtBPedit.setText(e.getVitalSigns().getBloodPres());
        txtTempEdit.setText(String.valueOf(e.getVitalSigns().getTemp()));
        txtHeight.setText(String.valueOf(e.getVitalSigns().getHeight()));
        txtWeight.setText(String.valueOf(e.getVitalSigns().getWeight()));
        txtPulseRate.setText(e.getVitalSigns().getPulseRate());
        txtComment.setText(e.getVitalSigns().getComments());
    }//GEN-LAST:event_btnEditEncounterActionPerformed

     /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginJFrame().setVisible(true);
            }
        });
    }
    
    private void getUserTableData() {
         
        btnUpdatePrsnDet.setVisible(false);
        
        DefaultTableModel model = (DefaultTableModel) tblViewPersonData.getModel(); 
        model.setRowCount(0); 
        
        for (Person person : system.getPersonList()){
            
            Object[] row = new Object[5];
            
            row[0] = person;
            row[1] = person.getUserName();
            row[2] = person.getRole();
            row[3] = person.getEmail();
            row[4] = person.getGender();
            
            model.addRow(row);
        }
    }
    
    private void pupolateLocationTables(){
        btnUpdateHouseHosp.setVisible(false);
        btnSubmitCityCommunity.setVisible(false);
        
        
        DefaultTableModel model = (DefaultTableModel) tblCity.getModel(); 
        model.setRowCount(0); 
        
        for (City city : system.getCityList()){
            
            Object[] row = new Object[1];
            
            row[0] = city;
            model.addRow(row);
        }
        
        model = (DefaultTableModel) tblCommmunity.getModel(); 
        model.setRowCount(0); 
        
        for (Community com : system.getCommunityList()){
            
            Object[] row = new Object[1];
            
            row[0] = com;
            model.addRow(row);
        }
        
        model = (DefaultTableModel) tblHospital.getModel(); 
        model.setRowCount(0); 
        
        for (Hospital hosp : system.getHospitalList().getHospitalList()){
            
            Object[] row = new Object[3];
            
            row[0] = hosp;
            row[1] = hosp.getCommunity();
            row[2] = hosp.getCity();
            
            model.addRow(row);
        }
        
        model = (DefaultTableModel) tblHouse.getModel(); 
        model.setRowCount(0); 
        
        for (House house : system.getHouseList()){
            
            Object[] row = new Object[3];
            
            row[0] = house;
            row[1] = house.getCommunity();
            row[2] = house.getCity();
            
            model.addRow(row);
        }
    }
    
    private void populateEncounterTable(ArrayList<Encounter> enc){
         btnSubmitNewEncounter1.setVisible(false);
        
        DefaultTableModel model = (DefaultTableModel) tblEncounter.getModel(); 
        model.setRowCount(0); 
        
        for (Encounter e : enc){
            
            Object[] row = new Object[3];
            
            row[0] = e; 
            row[1] = e.getPatient().getfName() + " " + e.getPatient().getlName();
            row[2] = String.valueOf(e.getAppointment());
            
            model.addRow(row);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddNewEncounterPanel;
    private javax.swing.JPanel EditEncounterPanel;
    private javax.swing.JPanel LoginJPanel;
    private javax.swing.JPanel NewDoctorSubPanel;
    private javax.swing.JPanel NewLocationJPanel;
    private javax.swing.JPanel NewUserJPanel;
    private javax.swing.JPanel UpdateDoctorSubPanel;
    private javax.swing.JPanel ViewEditLocationJPanel;
    private javax.swing.JPanel ViewEditUserJPanel;
    private javax.swing.JPanel WelcomeJPanel;
    private javax.swing.JButton btnAddNewEncounter;
    private javax.swing.JButton btnAddNewLocation;
    private javax.swing.JButton btnAddPatient;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBackEncounter;
    private javax.swing.JButton btnBackNewEncounter;
    private javax.swing.JButton btnBackViewEditLoc;
    private javax.swing.JButton btnDeletePerson;
    private javax.swing.JButton btnEditCity;
    private javax.swing.JButton btnEditCommunity;
    private javax.swing.JButton btnEditEncounter;
    private javax.swing.JButton btnEditHospital;
    private javax.swing.JButton btnEditHouse;
    private javax.swing.JButton btnEditPatient;
    private javax.swing.JButton btnEditPerson;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnNewLocationBack;
    private javax.swing.JButton btnNewUserSubmit;
    private javax.swing.JButton btnSaveNewCity;
    private javax.swing.JButton btnSaveNewCommunity;
    private javax.swing.JButton btnSaveNewHospital;
    private javax.swing.JButton btnSaveNewHouse;
    private javax.swing.JButton btnSearchPatient;
    private javax.swing.JButton btnSubmitCityCommunity;
    private javax.swing.JButton btnSubmitNewEncounter;
    private javax.swing.JButton btnSubmitNewEncounter1;
    private javax.swing.JButton btnUpdateHouseHosp;
    private javax.swing.JButton btnUpdatePrsnDet;
    private javax.swing.JButton btnViewEditBack;
    private javax.swing.JButton btnViewEditEncounter;
    private javax.swing.JButton btnViewEditLocation;
    private javax.swing.JButton btnViewEncounter;
    private javax.swing.JButton btnViewHospital;
    private javax.swing.JButton btnViewHouse;
    private javax.swing.JButton btnViewPerson;
    private javax.swing.JComboBox<String> cbCityHouseHospUpdate;
    private javax.swing.JComboBox<String> cbCityUserUpdate;
    private javax.swing.JComboBox<String> cbCommHouseHospUpdate;
    private javax.swing.JComboBox<String> cbCommunityUserUpdate;
    private javax.swing.JComboBox<String> cbDocUpdateHospital;
    private javax.swing.JComboBox<String> cbGender;
    private javax.swing.JComboBox<String> cbGenderUpdate;
    private javax.swing.JComboBox<String> cbNewDoctorCity;
    private javax.swing.JComboBox<String> cbNewDoctorEncounter;
    private javax.swing.JComboBox<String> cbNewDoctorEncounter1;
    private javax.swing.JComboBox<String> cbNewEncounterCity;
    private javax.swing.JComboBox<String> cbNewEncounterCity1;
    private javax.swing.JComboBox<String> cbNewEncounterCommunity;
    private javax.swing.JComboBox<String> cbNewEncounterCommunity1;
    private javax.swing.JComboBox<String> cbNewHospCity;
    private javax.swing.JComboBox<String> cbNewHospCommunity;
    private javax.swing.JComboBox<String> cbNewHospitalEncounter;
    private javax.swing.JComboBox<String> cbNewHospitalEncounter1;
    private javax.swing.JComboBox<String> cbNewHouseCity;
    private javax.swing.JComboBox<String> cbNewHouseCommunity;
    private javax.swing.JComboBox<String> cbNewUserCity;
    private javax.swing.JComboBox<String> cbNewUserCommunity;
    private javax.swing.JComboBox<String> cbNewUserHospital;
    private javax.swing.JComboBox<String> cbNewUserHouse;
    private javax.swing.JComboBox<String> cbNewUserSpecialization;
    private javax.swing.JComboBox<String> cbRole;
    private javax.swing.JComboBox<String> cbRoleUpdate;
    private javax.swing.JComboBox<String> cbUpdateDoctorCity;
    private javax.swing.JComboBox<String> cbUpdateSpecialization;
    private com.toedter.calendar.JDateChooser dtNewAppointment;
    private com.toedter.calendar.JDateChooser dtNewAppointment1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPaneCity;
    private javax.swing.JScrollPane jScrollPaneCommunity;
    private javax.swing.JScrollPane jScrollPaneHospital;
    private javax.swing.JScrollPane jScrollPaneHouse;
    private javax.swing.JLabel lblAddNewCity;
    private javax.swing.JLabel lblAddNewCommunity;
    private javax.swing.JLabel lblAddNewHospital;
    private javax.swing.JLabel lblAddNewHouse;
    private javax.swing.JLabel lblAddressDetails;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblAppointment;
    private javax.swing.JLabel lblAppointment1;
    private javax.swing.JLabel lblBPedit;
    private javax.swing.JLabel lblCity2;
    private javax.swing.JLabel lblCityEncounter;
    private javax.swing.JLabel lblCityEncounter1;
    private javax.swing.JLabel lblCityUpdate;
    private javax.swing.JLabel lblComments;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblCommunityUpdate;
    private javax.swing.JLabel lblDocNameEncounter;
    private javax.swing.JLabel lblDocNameEncounter1;
    private javax.swing.JLabel lblDocNameEncounter2;
    private javax.swing.JLabel lblDocNameEncounter3;
    private javax.swing.JLabel lblDocUpdateHospital;
    private javax.swing.JLabel lblDoctorDetails;
    private javax.swing.JLabel lblEmailId;
    private javax.swing.JLabel lblEncouter;
    private javax.swing.JLabel lblEncouter1;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblHeight;
    private javax.swing.JLabel lblHouse;
    private javax.swing.JLabel lblHouseUpdate;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblLoginDetails;
    private javax.swing.JLabel lblLoginPage;
    private javax.swing.JLabel lblNewCity;
    private javax.swing.JLabel lblNewCommunity;
    private javax.swing.JLabel lblNewDoctorCity;
    private javax.swing.JLabel lblNewHospCity;
    private javax.swing.JLabel lblNewHospCommunity;
    private javax.swing.JLabel lblNewHospital;
    private javax.swing.JLabel lblNewHouse;
    private javax.swing.JLabel lblNewHouseCity;
    private javax.swing.JLabel lblNewHouseCommunity;
    private javax.swing.JLabel lblNewPassword;
    private javax.swing.JLabel lblNewUser;
    private javax.swing.JLabel lblNewUserHospital;
    private javax.swing.JLabel lblNewUserName;
    private javax.swing.JLabel lblNewUserSpecialization;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPasswordUpdate;
    private javax.swing.JLabel lblPatientContact;
    private javax.swing.JLabel lblPatientDetails;
    private javax.swing.JLabel lblPatientName;
    private javax.swing.JLabel lblPatientNameEncounter;
    private javax.swing.JLabel lblPatientNameEncounter1;
    private javax.swing.JLabel lblPhoneNo;
    private javax.swing.JLabel lblPulseRate;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lblRoleUpdate;
    private javax.swing.JLabel lblTempEdit;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUpdateAge;
    private javax.swing.JLabel lblUpdateDetails;
    private javax.swing.JLabel lblUpdateDoctorCity;
    private javax.swing.JLabel lblUpdateEmailId;
    private javax.swing.JLabel lblUpdateFirstName;
    private javax.swing.JLabel lblUpdateGender;
    private javax.swing.JLabel lblUpdateLastName;
    private javax.swing.JLabel lblUpdatePhoneNo;
    private javax.swing.JLabel lblUpdateSpecialization;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JLabel lblUserNameUpdate;
    private javax.swing.JLabel lblViewEditCity;
    private javax.swing.JLabel lblViewEditCityName;
    private javax.swing.JLabel lblViewEditCommunity;
    private javax.swing.JLabel lblViewEditCommunityName;
    private javax.swing.JLabel lblViewEditHospital;
    private javax.swing.JLabel lblViewEditHouse;
    private javax.swing.JLabel lblViewEditLocation;
    private javax.swing.JLabel lblWeight;
    private javax.swing.JLabel lblWelcome;
    private javax.swing.JLabel lblZipCode;
    private javax.swing.JLabel lblZipCodeUpdate;
    private javax.swing.JLabel lvlVitals;
    private javax.swing.JPasswordField pwdLoginPassword;
    private javax.swing.JTable tblCity;
    private javax.swing.JTable tblCommmunity;
    private javax.swing.JTable tblEncounter;
    private javax.swing.JTable tblHospital;
    private javax.swing.JTable tblHouse;
    private javax.swing.JTable tblViewPersonData;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtAgeUpdate;
    private javax.swing.JTextField txtBPedit;
    private javax.swing.JTextArea txtComment;
    private javax.swing.JTextField txtEmailId;
    private javax.swing.JTextField txtEmailIdUpdate;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtFirstNameUpdate;
    private javax.swing.JTextField txtHeight;
    private javax.swing.JTextField txtHouseUpdate;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtLastNameUpdate;
    private javax.swing.JTextField txtNewCity;
    private javax.swing.JTextField txtNewCommunity;
    private javax.swing.JTextField txtNewEncounterPatient;
    private javax.swing.JTextField txtNewEncounterPatient1;
    private javax.swing.JTextField txtNewHospital;
    private javax.swing.JTextField txtNewHouse;
    private javax.swing.JPasswordField txtNewPassword;
    private javax.swing.JTextField txtNewUserName;
    private javax.swing.JPasswordField txtPasswordUpdate;
    private javax.swing.JLabel txtPatNameEncounter1;
    private javax.swing.JLabel txtPatNameEncounter2;
    private javax.swing.JTextField txtPhoneNo;
    private javax.swing.JTextField txtPhoneNoUpdate;
    private javax.swing.JTextField txtPulseRate;
    private javax.swing.JTextField txtSearchPatient;
    private javax.swing.JTextField txtTempEdit;
    private javax.swing.JTextField txtUserName;
    private javax.swing.JTextField txtUserNameUpdate;
    private javax.swing.JTextField txtViewEditCityName;
    private javax.swing.JTextField txtViewEditCommunityName;
    private javax.swing.JTextField txtViewEditHospitalName;
    private javax.swing.JTextField txtViewEditHouseName;
    private javax.swing.JTextField txtWeight;
    private javax.swing.JTextField txtZipCode;
    private javax.swing.JTextField txtZipCodeUpdate;
    // End of variables declaration//GEN-END:variables
}
